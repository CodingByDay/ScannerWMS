# ACW for ScannerQR
# ACW for DeviceAPI
-keep class com.zebra.adc.decoder.Barcode2DWithSoft$CODETYPE
-keepclassmembers class com.zebra.adc.decoder.Barcode2DWithSoft$CODETYPE {
   *** getValue(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.zebra.adc.decoder.Barcode2DWithSoft$HardwareType
-keepclassmembers class com.zebra.adc.decoder.Barcode2DWithSoft$HardwareType {
   *** valueOf(...);
   *** values(...);
}

-keep class com.zebra.adc.decoder.Barcode2DWithSoft$PictureCallback
-keepclassmembers class com.zebra.adc.decoder.Barcode2DWithSoft$PictureCallback {
}

-keep class com.zebra.adc.decoder.Barcode2DWithSoft$ResultDataBroadcastReceiver
-keepclassmembers class com.zebra.adc.decoder.Barcode2DWithSoft$ResultDataBroadcastReceiver {
   *** onReceive(...);
}

-keep class com.zebra.adc.decoder.Barcode2DWithSoft$ScanCallback
-keepclassmembers class com.zebra.adc.decoder.Barcode2DWithSoft$ScanCallback {
}

-keep class com.zebra.adc.decoder.Barcode2DWithSoft$ScanerParamNum
-keepclassmembers class com.zebra.adc.decoder.Barcode2DWithSoft$ScanerParamNum {
   <init>(...);
}

-keep class com.zebra.adc.decoder.Barcode2DWithSoft$ScanerParamVal
-keepclassmembers class com.zebra.adc.decoder.Barcode2DWithSoft$ScanerParamVal {
   <init>(...);
}

-keep class com.zebra.adc.decoder.Barcode2DWithSoft$ScanerPropertyNum
-keepclassmembers class com.zebra.adc.decoder.Barcode2DWithSoft$ScanerPropertyNum {
   <init>(...);
}

-keep class com.zebra.adc.decoder.Barcode2DWithSoft$ThreadGC
-keepclassmembers class com.zebra.adc.decoder.Barcode2DWithSoft$ThreadGC {
   <init>(...);
   *** getIsScaning(...);
   *** closeScan(...);
   *** notifyOpen(...);
   *** run(...);
   *** waitOpen(...);
}

-keep class com.zebra.adc.decoder.Barcode2DWithSoft$ThreadScan
-keepclassmembers class com.zebra.adc.decoder.Barcode2DWithSoft$ThreadScan {
   <init>(...);
   *** getIsScaning(...);
   *** SetDecodingSettings(...);
   *** SetScanningSettings(...);
   *** run(...);
}

-keep class com.zebra.adc.decoder.Barcode2DWithSoft$VideoCallback
-keepclassmembers class com.zebra.adc.decoder.Barcode2DWithSoft$VideoCallback {
}

-keep class com.zebra.adc.decoder.Barcode2DWithSoft
-keepclassmembers class com.zebra.adc.decoder.Barcode2DWithSoft {
   <init>(...);
   *** getDecoder(...);
   *** getInstance(...);
   *** isPowerOn(...);
   *** isUpAndroid7(...);
   *** close(...);
   *** disableAllCodeTypes(...);
   *** enableAllCodeTypes(...);
   *** enableBarcode(...);
   *** fWUpdate(...);
   *** getCodeTypeList(...);
   *** getHardwareType(...);
   *** getNumParameter(...);
   *** getNumProperty(...);
   *** getScannerIdFromCamera2(...);
   *** getScannerIdFromCamera(...);
   *** getStrParameter(...);
   *** getStrProperty(...);
   *** open(...);
   *** readCameraState(...);
   *** readScannerCameraId(...);
   *** scan(...);
   *** setCodeTypeOnAndOff_IA400S(...);
   *** setDefaultParameters(...);
   *** setLicense_IA400S(...);
   *** setNoDisplayMode(...);
   *** setParameter(...);
   *** setParameter(...);
   *** setPowerOn(...);
   *** setPreviewDisplay(...);
   *** setScanCallback2(...);
   *** setScanCallback(...);
   *** setTimeOut(...);
   *** startHandsFree(...);
   *** startPreview(...);
   *** startViewFinder(...);
   *** stopHandsFree(...);
   *** stopPreview(...);
   *** stopScan(...);
   *** takePicture(...);
   *** writeCameraState(...);
   *** writeScannerCameraId(...);
   *** writeScannerState(...);
}

-keep class com.zebra.adc.decoder.BarCodeReader$AutoFocusCallback
-keepclassmembers class com.zebra.adc.decoder.BarCodeReader$AutoFocusCallback {
}

-keep class com.zebra.adc.decoder.BarCodeReader$DecodeCallback
-keepclassmembers class com.zebra.adc.decoder.BarCodeReader$DecodeCallback {
}

-keep class com.zebra.adc.decoder.BarCodeReader$ErrorCallback
-keepclassmembers class com.zebra.adc.decoder.BarCodeReader$ErrorCallback {
}

-keep class com.zebra.adc.decoder.BarCodeReader$EventHandler
-keepclassmembers class com.zebra.adc.decoder.BarCodeReader$EventHandler {
   <init>(...);
}

-keep class com.zebra.adc.decoder.BarCodeReader$OnZoomChangeListener
-keepclassmembers class com.zebra.adc.decoder.BarCodeReader$OnZoomChangeListener {
}

-keep class mono.com.zebra.adc.decoder.BarCodeReader_OnZoomChangeListenerImplementor
-keepclassmembers class mono.com.zebra.adc.decoder.BarCodeReader_OnZoomChangeListenerImplementor {
}

-keep class com.zebra.adc.decoder.BarCodeReader$ParamNum
-keepclassmembers class com.zebra.adc.decoder.BarCodeReader$ParamNum {
}

-keep class com.zebra.adc.decoder.BarCodeReader$ParamVal
-keepclassmembers class com.zebra.adc.decoder.BarCodeReader$ParamVal {
}

-keep class com.zebra.adc.decoder.BarCodeReader$Parameters
-keepclassmembers class com.zebra.adc.decoder.BarCodeReader$Parameters {
   *** getAntibanding(...);
   *** setAntibanding(...);
   *** getColorEffect(...);
   *** setColorEffect(...);
   *** getExposureCompensation(...);
   *** setExposureCompensation(...);
   *** getExposureCompensationStep(...);
   *** getFlashMode(...);
   *** setFlashMode(...);
   *** getFocalLength(...);
   *** getFocusMode(...);
   *** setFocusMode(...);
   *** getHorizontalViewAngle(...);
   *** isSmoothZoomSupported(...);
   *** isZoomSupported(...);
   *** getJpegQuality(...);
   *** setJpegQuality(...);
   *** getJpegThumbnailQuality(...);
   *** setJpegThumbnailQuality(...);
   *** getMaxExposureCompensation(...);
   *** getMaxZoom(...);
   *** getMinExposureCompensation(...);
   *** getPictureFormat(...);
   *** setPictureFormat(...);
   *** getPreviewFormat(...);
   *** setPreviewFormat(...);
   *** getPreviewFrameRate(...);
   *** setPreviewFrameRate(...);
   *** getSceneMode(...);
   *** setSceneMode(...);
   *** getSupportedAntibanding(...);
   *** getSupportedColorEffects(...);
   *** getSupportedFlashModes(...);
   *** getSupportedFocusModes(...);
   *** getSupportedJpegThumbnailSizes(...);
   *** getSupportedPictureFormats(...);
   *** getSupportedPictureSizes(...);
   *** getSupportedPreviewFormats(...);
   *** getSupportedPreviewFpsRange(...);
   *** getSupportedPreviewFrameRates(...);
   *** getSupportedPreviewSizes(...);
   *** getSupportedSceneModes(...);
   *** getSupportedWhiteBalance(...);
   *** getVerticalViewAngle(...);
   *** getWhiteBalance(...);
   *** setWhiteBalance(...);
   *** getZoom(...);
   *** setZoom(...);
   *** getZoomRatios(...);
   *** dump(...);
   *** flatten(...);
   *** get(...);
   *** getFocusDistances(...);
   *** getInt(...);
   *** getPreviewFpsRange(...);
   *** remove(...);
   *** removeGpsData(...);
   *** set(...);
   *** set(...);
   *** setGpsAltitude(...);
   *** setGpsLatitude(...);
   *** setGpsLongitude(...);
   *** setGpsProcessingMethod(...);
   *** setGpsTimestamp(...);
   *** setJpegThumbnailSize(...);
   *** setNoDisplayMode(...);
   *** setPictureSize(...);
   *** setPreviewFpsRange(...);
   *** setPreviewSize(...);
   *** setRotation(...);
   *** unflatten(...);
}

-keep class com.zebra.adc.decoder.BarCodeReader$PictureCallback
-keepclassmembers class com.zebra.adc.decoder.BarCodeReader$PictureCallback {
}

-keep class com.zebra.adc.decoder.BarCodeReader$PreviewCallback
-keepclassmembers class com.zebra.adc.decoder.BarCodeReader$PreviewCallback {
}

-keep class com.zebra.adc.decoder.BarCodeReader$PropertyNum
-keepclassmembers class com.zebra.adc.decoder.BarCodeReader$PropertyNum {
}

-keep class com.zebra.adc.decoder.BarCodeReader$ReaderInfo
-keepclassmembers class com.zebra.adc.decoder.BarCodeReader$ReaderInfo {
}

-keep class com.zebra.adc.decoder.BarCodeReader$Size
-keepclassmembers class com.zebra.adc.decoder.BarCodeReader$Size {
   <init>(...);
}

-keep class com.zebra.adc.decoder.BarCodeReader$VideoCallback
-keepclassmembers class com.zebra.adc.decoder.BarCodeReader$VideoCallback {
}

-keep class com.zebra.adc.decoder.BarCodeReader
-keepclassmembers class com.zebra.adc.decoder.BarCodeReader {
   *** getDecodeCount(...);
   *** FWUpdate(...);
   *** addCallbackBuffer(...);
   *** cancelAutoFocus(...);
   *** disableAllCodeTypes(...);
   *** enableAllCodeTypes(...);
   *** getLastDecImage(...);
   *** getNumParameter(...);
   *** getNumProperty(...);
   *** getStrParameter(...);
   *** getStrProperty(...);
   *** lock(...);
   *** previewEnabled(...);
   *** reconnect(...);
   *** release(...);
   *** setAutoFocusDelay(...);
   *** setDecodeCallback2(...);
   *** setDefaultParameters(...);
   *** setDisplayMode(...);
   *** setDisplayOrientation(...);
   *** setNoDisplayMode(...);
   *** setParameter(...);
   *** setParameter(...);
   *** setPreviewDisplay(...);
   *** setZoomChangeListener(...);
   *** startDecode(...);
   *** startHandsFreeDecode(...);
   *** startPreview(...);
   *** startSmoothZoom(...);
   *** stopDecode(...);
   *** stopPreview(...);
   *** stopSmoothZoom(...);
   *** unlock(...);
}

-keep class com.zebra.adc.decoder.Config
-keepclassmembers class com.zebra.adc.decoder.Config {
   <init>(...);
   *** getFlag(...);
   *** setFlag(...);
}

-keep class com.zebra.adc.decoder.SymbologyConfiguration$BarcodeSymbologyID
-keepclassmembers class com.zebra.adc.decoder.SymbologyConfiguration$BarcodeSymbologyID {
   *** valueOf(...);
   *** values(...);
}

-keep class com.zebra.adc.decoder.SymbologyConfiguration
-keepclassmembers class com.zebra.adc.decoder.SymbologyConfiguration {
   <init>(...);
   *** SetSymbologySettings(...);
}

-keep class com.scanner.IScanner
-keepclassmembers class com.scanner.IScanner {
}

-keep class com.scanner.IScanner
-keepclassmembers class com.scanner.IScanner {
}

-keep class com.scanner.IScanner
-keepclassmembers class com.scanner.IScanner {
}

-keep class com.scanner.utility.ScannerUtility
-keepclassmembers class com.scanner.utility.ScannerUtility {
   *** getScannerInerface(...);
   *** Close(...);
   *** Open(...);
   *** disableFunction(...);
   *** enableAuxiliaryLight(...);
   *** enableBarcodeNotRepeat(...);
   *** enableBlockScankey(...);
   *** enableEnter(...);
   *** enableFunction(...);
   *** enablePlayFailureSound(...);
   *** enablePlaySuccessSound(...);
   *** enableTAB(...);
   *** enableVibrate(...);
   *** filterCharacter(...);
   *** interceptTrimLeft(...);
   *** interceptTrimRight(...);
   *** resetScan(...);
   *** setBarcodeContinuousMode(...);
   *** setBarcodeEncodingFormat(...);
   *** setContinuousScan(...);
   *** setContinuousScanIntervalTime(...);
   *** setContinuousScanIntervalTimeRFID(...);
   *** setContinuousScanRFID(...);
   *** setContinuousScanTimeOut(...);
   *** setContinuousScanTimeOutRFID(...);
   *** setGroupSeparator(...);
   *** setOutputMode(...);
   *** setParam_zebra(...);
   *** setPrefix(...);
   *** setRFIDEncodingFormat(...);
   *** setReleaseScan(...);
   *** setScanFailureBroadcast(...);
   *** setScanKey(...);
   *** setScanOutTime(...);
   *** setScanResultBroadcast(...);
   *** setScanResultBroadcastRFID(...);
   *** setSuffix(...);
   *** setUHFMode(...);
   *** setUHFPower(...);
   *** startScan(...);
   *** stopScan(...);
}

-keep class com.rscja.utility.StringUtility
-keepclassmembers class com.rscja.utility.StringUtility {
   <init>(...);
   *** BitToByte(...);
   *** Int2bytes(...);
   *** byte2Bit(...);
   *** byte2HexString(...);
   *** byteArrayTolong(...);
   *** bytes2HexString2(...);
   *** bytes2HexString(...);
   *** bytes2HexString(...);
   *** bytes2HexString(...);
   *** bytesToHexString(...);
   *** bytesToInt(...);
   *** bytesTochars(...);
   *** char2HexString(...);
   *** charArrayTolong(...);
   *** chars2HexString(...);
   *** chars2Long(...);
   *** charsTobytes(...);
   *** getBytes(...);
   *** getChars(...);
   *** hexString2Bytes(...);
   *** hexString2Chars(...);
   *** hexStringToBytes(...);
   *** int2Bytes(...);
   *** int2HexString(...);
   *** ints2HexString(...);
   *** isDecimal(...);
   *** isEmpty(...);
   *** isHexNumber(...);
   *** isHexNumberRex(...);
   *** isNum(...);
   *** isOctNumber(...);
   *** isOctNumberRex(...);
   *** long2Bytes(...);
   *** readUnsignedInt64(...);
   *** reverse(...);
   *** setDebug(...);
   *** string2Int(...);
}

-keep class com.rscja.deviceapi.Barcode1D
-keepclassmembers class com.rscja.deviceapi.Barcode1D {
   *** getInstance(...);
   *** close(...);
   *** open(...);
   *** open(...);
   *** scan(...);
   *** scanBarcode(...);
   *** setBaudrate(...);
   *** setTimeOut(...);
   *** stopScan(...);
}

-keep class com.rscja.deviceapi.Barcode2D
-keepclassmembers class com.rscja.deviceapi.Barcode2D {
   *** getInstance(...);
   *** close(...);
   *** open(...);
   *** open(...);
   *** scan(...);
   *** scanBarcode(...);
   *** setTimeOut(...);
   *** stopScan(...);
}

-keep class com.rscja.deviceapi.BDNavigation$BDLocationListener
-keepclassmembers class com.rscja.deviceapi.BDNavigation$BDLocationListener {
}

-keep class mono.com.rscja.deviceapi.BDNavigation_BDLocationListenerImplementor
-keepclassmembers class mono.com.rscja.deviceapi.BDNavigation_BDLocationListenerImplementor {
}

-keep class com.rscja.deviceapi.BDNavigation$BDProviderEnum
-keepclassmembers class com.rscja.deviceapi.BDNavigation$BDProviderEnum {
   *** valueOf(...);
   *** values(...);
}

-keep class com.rscja.deviceapi.BDNavigation$BDStartModeEnum
-keepclassmembers class com.rscja.deviceapi.BDNavigation$BDStartModeEnum {
   *** valueOf(...);
   *** values(...);
}

-keep class com.rscja.deviceapi.BDNavigation$BDStatusListener
-keepclassmembers class com.rscja.deviceapi.BDNavigation$BDStatusListener {
}

-keep class mono.com.rscja.deviceapi.BDNavigation_BDStatusListenerImplementor
-keepclassmembers class mono.com.rscja.deviceapi.BDNavigation_BDStatusListenerImplementor {
}

-keep class com.rscja.deviceapi.BDNavigation$ReadThread
-keepclassmembers class com.rscja.deviceapi.BDNavigation$ReadThread {
   *** setWait(...);
}

-keep class com.rscja.deviceapi.BDNavigation$TestResultRawData
-keepclassmembers class com.rscja.deviceapi.BDNavigation$TestResultRawData {
}

-keep class com.rscja.deviceapi.BDNavigation
-keepclassmembers class com.rscja.deviceapi.BDNavigation {
   <init>(...);
   *** getInstance(...);
   *** getLastLocation(...);
   *** getLastSatelliteUCount(...);
   *** getLastUTCDateTime(...);
   *** getLastsatelliteVCount(...);
   *** getResultData(...);
   *** getTimeToFirstFix(...);
   *** addBDLocationListener(...);
   *** addBDStatusListener(...);
   *** addTestBDRawDataListener(...);
   *** bdTest(...);
   *** changeBDProvider(...);
   *** changeBDStartMode(...);
   *** close(...);
   *** open(...);
   *** setClosePort(...);
   *** setOpenPort(...);
   *** writeData(...);
}

-keep class com.rscja.deviceapi.BluetoothReader$DataCallBack
-keepclassmembers class com.rscja.deviceapi.BluetoothReader$DataCallBack {
   *** receiveBTData(...);
}

-keep class com.rscja.deviceapi.BluetoothReader$OnDataChangeListener
-keepclassmembers class com.rscja.deviceapi.BluetoothReader$OnDataChangeListener {
}

-keep class mono.com.rscja.deviceapi.BluetoothReader_OnDataChangeListenerImplementor
-keepclassmembers class mono.com.rscja.deviceapi.BluetoothReader_OnDataChangeListenerImplementor {
}

-keep class com.rscja.deviceapi.BluetoothReader
-keepclassmembers class com.rscja.deviceapi.BluetoothReader {
   <init>(...);
   *** getBattery(...);
   *** getBluetoothVersion(...);
   *** getConnectStatus(...);
   *** getDeviceAPI(...);
   *** getInstance(...);
   *** getSTM32Version(...);
   *** connect(...);
   *** connect(...);
   *** disconnect(...);
   *** free(...);
   *** init(...);
   *** scanBarcode(...);
   *** scanBarcodeToBytes(...);
   *** sendData(...);
   *** setBeep(...);
   *** setKeyEventCallback(...);
   *** setOnDataChangeListener(...);
   *** setRemoteBluetoothName(...);
   *** setStatusCallback(...);
   *** startScanBTDevices(...);
   *** stopScanBTDevices(...);
}

-keep class com.rscja.deviceapi.CardWithBYL
-keepclassmembers class com.rscja.deviceapi.CardWithBYL {
   *** getDeviceAPI(...);
   *** getInstance(...);
   *** getPsamCardID(...);
   *** Consume(...);
   *** byte2HexString(...);
   *** bytesToHexString(...);
   *** cardConsumeConfirm(...);
   *** cleanFaultCard(...);
   *** free(...);
   *** getBalance(...);
   *** getMessage(...);
   *** init(...);
   *** setLog(...);
}

-keep class com.rscja.deviceapi.Device
-keepclassmembers class com.rscja.deviceapi.Device {
   <init>(...);
   *** isPowerOn(...);
   *** setPowerOn(...);
}

-keep class com.rscja.deviceapi.Device
-keepclassmembers class com.rscja.deviceapi.Device {
}

-keep class com.rscja.deviceapi.DeviceAPI
-keepclassmembers class com.rscja.deviceapi.DeviceAPI {
   *** getInstance(...);
   *** Auth_ActiveFile(...);
   *** Auth_CertificationChain(...);
   *** Auth_RequestRandom(...);
   *** Auth_SendData(...);
   *** Auth_UserInfo(...);
   *** Barcode_1D_Close(...);
   *** Barcode_1D_Open(...);
   *** Barcode_1D_Scan(...);
   *** Barcode_1D_SetTimeOut(...);
   *** Barcode_1D_StopScan(...);
   *** Barcode_2D_Close(...);
   *** Barcode_2D_Open(...);
   *** Barcode_2D_Scan(...);
   *** Barcode_2D_SetTimeOut(...);
   *** Barcode_2D_StopScan(...);
   *** CardBalance(...);
   *** CardConsume(...);
   *** CardConsumeConfirm(...);
   *** CleanVar(...);
   *** ConfigFDXTag(...);
   *** Config_GetAccess(...);
   *** Config_GetPara(...);
   *** Config_ReadRTC(...);
   *** Config_SetPara(...);
   *** Config_SetRTC(...);
   *** Config_SetWorkMode(...);
   *** EM125K_GetEm4450UID(...);
   *** EM125k_Read4305(...);
   *** EM125k_ReadHitag1(...);
   *** EM125k_ReadHitag(...);
   *** EM125k_UID_REQ(...);
   *** EM125k_Write4305(...);
   *** EM125k_WriteHitagPage(...);
   *** EM125k_free(...);
   *** EM125k_init(...);
   *** EM125k_init_Ex(...);
   *** EM125k_read(...);
   *** EM125k_read_Ex(...);
   *** EM4325SensorData(...);
   *** EMAutoEnroll(...);
   *** EMAutoMatch(...);
   *** EMDeletChar(...);
   *** EMDownChar(...);
   *** EMEmpty(...);
   *** EMFingerFree(...);
   *** EMFingerInit(...);
   *** EMFingerMoudleSet(...);
   *** EMGenChar(...);
   *** EMGetImage(...);
   *** EMGetRandomData(...);
   *** EMLoadChar(...);
   *** EMMatch(...);
   *** EMReadChipSN(...);
   *** EMReadSysPara(...);
   *** EMReadSysParaMore(...);
   *** EMRegModel(...);
   *** EMSearch(...);
   *** EMSetDeviceName(...);
   *** EMSetManuFacture(...);
   *** EMSetPSW(...);
   *** EMSetReg(...);
   *** EMStorChar(...);
   *** EMUpChar(...);
   *** EMUpImage(...);
   *** EMUpImageISO(...);
   *** EMValidTempleteNum(...);
   *** EMVfyPSW(...);
   *** EM_25kread(...);
   *** EventReport(...);
   *** GetAccState(...);
   *** GetGen2(...);
   *** GetQTPara(...);
   *** GetTemperature(...);
   *** HID_GetUid(...);
   *** HardwareVersion_125k(...);
   *** ISO14443A_BUS_CMD(...);
   *** ISO14443A_authentication(...);
   *** ISO14443A_cpu_command(...);
   *** ISO14443A_cpu_rats(...);
   *** ISO14443A_cpu_reset(...);
   *** ISO14443A_decrement(...);
   *** ISO14443A_increment(...);
   *** ISO14443A_initval(...);
   *** ISO14443A_mifareone_alldata_read(...);
   *** ISO14443A_read(...);
   *** ISO14443A_readval(...);
   *** ISO14443A_request(...);
   *** ISO14443A_restore(...);
   *** ISO14443A_transfer(...);
   *** ISO14443A_ul_read(...);
   *** ISO14443A_ul_write(...);
   *** ISO14443A_write(...);
   *** ISO14443B_UID(...);
   *** ISO14443B_cpu_command(...);
   *** ISO14443B_cpu_reset(...);
   *** ISO15693_GenericFunction(...);
   *** ISO15693_GenericFunctionEx(...);
   *** ISO15693_getMultipleBlockSecurityStatus(...);
   *** ISO15693_getSystemInformation(...);
   *** ISO15693_inventory(...);
   *** ISO15693_lockAFI(...);
   *** ISO15693_lockBlock(...);
   *** ISO15693_lockDSFID(...);
   *** ISO15693_read_sm(...);
   *** ISO15693_read_sm_ex(...);
   *** ISO15693_transferCommand(...);
   *** ISO15693_writeAFI(...);
   *** ISO15693_writeDSFID(...);
   *** ISO15693_write_sm(...);
   *** ISO15693_write_sm_ex(...);
   *** Infared_IDPOWER(...);
   *** Infared_IDPOWER07(...);
   *** Infrared_Close(...);
   *** Infrared_Open(...);
   *** Infrared_SwitchSerialPort(...);
   *** LedOff(...);
   *** LedOn(...);
   *** ModuleFree(...);
   *** ModuleInit(...);
   *** ModuleInitEx(...);
   *** ModulePowerOff(...);
   *** ModulePowerOn(...);
   *** ModuleReceive(...);
   *** ModuleReceiveEx(...);
   *** ModuleSend(...);
   *** ModuleSendAndReceive(...);
   *** MorphoCancel(...);
   *** MorphoCapture(...);
   *** MorphoCapturePKComp(...);
   *** MorphoDescriptor(...);
   *** MorphoEnroll(...);
   *** MorphoEraseAllBase(...);
   *** MorphoFingerFree(...);
   *** MorphoFingerInit(...);
   *** MorphoFingerMessage(...);
   *** MorphoGetSecurityLevel(...);
   *** MorphoIdentify(...);
   *** MorphoLoadKs(...);
   *** MorphoPIDSN(...);
   *** MorphoSetSecurityLevel(...);
   *** MorphoStop(...);
   *** MorphoVerifyPKComp(...);
   *** OTG_GPIO_OFF(...);
   *** OTG_GPIO_ON(...);
   *** OpenSerail(...);
   *** POWER_LED_OFF(...);
   *** POWER_LED_ON(...);
   *** PSAM_UPDATE(...);
   *** PTCapture(...);
   *** PTConvertTemplateEx(...);
   *** PTDeleteAllFingers(...);
   *** PTEnroll(...);
   *** PTExit(...);
   *** PTGUICancel(...);
   *** PTGetAppData(...);
   *** PTGrab(...);
   *** PTInfo(...);
   *** PTInit(...);
   *** PTListAllFingers(...);
   *** PTResponseContinue(...);
   *** PTSetAppData(...);
   *** PTTLSFContinue(...);
   *** PTVerify(...);
   *** PTVerifyALL(...);
   *** PrinterFree(...);
   *** PrinterInit(...);
   *** PrinterReceive(...);
   *** PrinterSend(...);
   *** PrinterSendAndReceive(...);
   *** PrinterSerialPortOpen(...);
   *** Psam_Cmd(...);
   *** Psam_Free(...);
   *** Psam_Init(...);
   *** Psam_InitXy(...);
   *** R2000_FreHopSet(...);
   *** R2000_OPENMODE(...);
   *** RFID_GetVer(...);
   *** RFID_UPDATE(...);
   *** RFID_free(...);
   *** RFID_init(...);
   *** RF_ISO14443A_DESFIRE_AddApp(...);
   *** RF_ISO14443A_DESFIRE_AddStdFile(...);
   *** RF_ISO14443A_DESFIRE_AddValueFile(...);
   *** RF_ISO14443A_DESFIRE_Auth(...);
   *** RF_ISO14443A_DESFIRE_ChangeFileSetting(...);
   *** RF_ISO14443A_DESFIRE_ChangeKey(...);
   *** RF_ISO14443A_DESFIRE_ChangeKeySetting(...);
   *** RF_ISO14443A_DESFIRE_Cpysel(...);
   *** RF_ISO14443A_DESFIRE_CreditValueFile(...);
   *** RF_ISO14443A_DESFIRE_DebitValueFile(...);
   *** RF_ISO14443A_DESFIRE_DelApp(...);
   *** RF_ISO14443A_DESFIRE_DelFile(...);
   *** RF_ISO14443A_DESFIRE_FormatCard(...);
   *** RF_ISO14443A_DESFIRE_GetApps(...);
   *** RF_ISO14443A_DESFIRE_GetFileIds(...);
   *** RF_ISO14443A_DESFIRE_GetFileSetting(...);
   *** RF_ISO14443A_DESFIRE_GetKeySetting(...);
   *** RF_ISO14443A_DESFIRE_GetPiccInfo(...);
   *** RF_ISO14443A_DESFIRE_GetValueFile(...);
   *** RF_ISO14443A_DESFIRE_RatPss(...);
   *** RF_ISO14443A_DESFIRE_ReadStdFile(...);
   *** RF_ISO14443A_DESFIRE_SelApp(...);
   *** RF_ISO14443A_DESFIRE_WriteStdFile(...);
   *** Request_WriteSpecialPart(...);
   *** Requset_ReadPart(...);
   *** Requset_WritePart(...);
   *** ScanerLed_Free(...);
   *** ScanerLed_Init(...);
   *** ScanerLed_Off(...);
   *** ScanerLed_On(...);
   *** SerailClose(...);
   *** SerailOpen(...);
   *** SetConfig(...);
   *** SetGen2(...);
   *** SetInventoryFixed(...);
   *** SetInventorySper(...);
   *** SetInventorySper(...);
   *** SetQTPara(...);
   *** SetTestMode(...);
   *** SpiFree(...);
   *** SpiInit(...);
   *** SpiRead(...);
   *** SpiWrite(...);
   *** TransBuf(...);
   *** TransData(...);
   *** UHF706_CloseAndDisconnect(...);
   *** UHF706_OpenAndConnect(...);
   *** UHFBTAuthentication(...);
   *** UHFBTDeleteAllTagToFlash(...);
   *** UHFBTDeleteAllTagToFlashRecvData(...);
   *** UHFBTDeleteAllTagToFlashSendData(...);
   *** UHFBTEncReadUser(...);
   *** UHFBTEncWriteUser(...);
   *** UHFBTEndUpdate(...);
   *** UHFBTEraseData(...);
   *** UHFBTFreHopSet(...);
   *** UHFBTGetAllTagNumFromFlash(...);
   *** UHFBTGetAllTagNumFromFlashRecvData(...);
   *** UHFBTGetAllTagNumFromFlashSendData(...);
   *** UHFBTGetBarcode(...);
   *** UHFBTGetBattery(...);
   *** UHFBTGetCW(...);
   *** UHFBTGetGen2(...);
   *** UHFBTGetPower(...);
   *** UHFBTGetPowerValueRecvData(...);
   *** UHFBTGetSendCmd(...);
   *** UHFBTGetTag(...);
   *** UHFBTGetTagDataFromFlash(...);
   *** UHFBTGetTagDataFromFlashRecvData(...);
   *** UHFBTGetTagDataFromFlashSendData(...);
   *** UHFBTInventorySingle(...);
   *** UHFBTKeydataMac(...);
   *** UHFBTKill(...);
   *** UHFBTLockMemEx(...);
   *** UHFBTOpen2DRecvData(...);
   *** UHFBTR2000Temperature(...);
   *** UHFBTR2000Version(...);
   *** UHFBTReBootAPP(...);
   *** UHFBTReadData(...);
   *** UHFBTReadEpcTidUserMode(...);
   *** UHFBTSTM32Version(...);
   *** UHFBTSendAndReceive(...);
   *** UHFBTSetBeep(...);
   *** UHFBTSetBeepRecvData(...);
   *** UHFBTSetCW(...);
   *** UHFBTSetEpcTidUserMode(...);
   *** UHFBTSetGen2(...);
   *** UHFBTSetPower(...);
   *** UHFBTSetProtocolType(...);
   *** UHFBTSetR6Workmode(...);
   *** UHFBTStartInventory(...);
   *** UHFBTStartUpdate(...);
   *** UHFBTStopInventory(...);
   *** UHFBTUHFGBTagLock(...);
   *** UHFBTUHFGetProtocolType(...);
   *** UHFBTUpdateData(...);
   *** UHFBTWriteData(...);
   *** UHFBlockEraseDataRecvData(...);
   *** UHFBlockEraseDataSendData(...);
   *** UHFBlockPermalock(...);
   *** UHFBlockPermalock_Ex(...);
   *** UHFBlockWriteData(...);
   *** UHFBlockWriteDataRecvData(...);
   *** UHFBlockWriteDataSendData(...);
   *** UHFCloseAndDisconnect(...);
   *** UHFDeactivate(...);
   *** UHFDecSM4(...);
   *** UHFDecUSER(...);
   *** UHFDecryptSM4(...);
   *** UHFDwell(...);
   *** UHFEncSM4(...);
   *** UHFEncUSER(...);
   *** UHFEncryptSM4(...);
   *** UHFEraseData(...);
   *** UHFEraseDataEx(...);
   *** UHFEraseDataSingle(...);
   *** UHFFlafCrcOff(...);
   *** UHFFlagCrcOn(...);
   *** UHFFree(...);
   *** UHFGBTagLock(...);
   *** UHFGBTagLockRecvData(...);
   *** UHFGBTagLockSendData(...);
   *** UHFGETSM4(...);
   *** UHFGetANT(...);
   *** UHFGetBID(...);
   *** UHFGetBTFrequency(...);
   *** UHFGetCW(...);
   *** UHFGetCWRecvData(...);
   *** UHFGetCWSendData(...);
   *** UHFGetEPCTIDMode(...);
   *** UHFGetEPCTIDModeRecvData(...);
   *** UHFGetEPCTIDModeSendData(...);
   *** UHFGetFrequency(...);
   *** UHFGetFrequency_Ex(...);
   *** UHFGetGen2RecvData(...);
   *** UHFGetGen2SendData(...);
   *** UHFGetHwType(...);
   *** UHFGetHwTypeM3(...);
   *** UHFGetMode(...);
   *** UHFGetMultiDataReceived(...);
   *** UHFGetParam(...);
   *** UHFGetPower(...);
   *** UHFGetPowerRecvData(...);
   *** UHFGetPowerSendData(...);
   *** UHFGetProtocolType(...);
   *** UHFGetProtocolTypeRecvData(...);
   *** UHFGetProtocolTypeSendData(...);
   *** UHFGetPwm(...);
   *** UHFGetRFLink(...);
   *** UHFGetRSSI(...);
   *** UHFGetReceived(...);
   *** UHFGetReceived_EX(...);
   *** UHFGetReceived_EX2(...);
   *** UHFGetReceived_EX_R2000(...);
   *** UHFGetRegionRecvData(...);
   *** UHFGetRegionSendData(...);
   *** UHFGetSM4(...);
   *** UHFGetSTM32VersionRecvData(...);
   *** UHFGetSTM32VersionSendData(...);
   *** UHFGetSingelMode(...);
   *** UHFGetSoftwareVersionRecvData(...);
   *** UHFGetSoftwareVersionSendData(...);
   *** UHFGetTagsDataRecvData(...);
   *** UHFGetTagsDataSendData(...);
   *** UHFGetTempProtectVal(...);
   *** UHFGetTemperatureRecvData(...);
   *** UHFGetTemperatureSendData(...);
   *** UHFGetVersion(...);
   *** UHFInit(...);
   *** UHFInventory(...);
   *** UHFInventoryBID(...);
   *** UHFInventoryBank(...);
   *** UHFInventoryRecvData(...);
   *** UHFInventorySendData(...);
   *** UHFInventorySingle(...);
   *** UHFInventorySingleEPCTIDUSER(...);
   *** UHFInventorySingleRecvData(...);
   *** UHFInventorySingleSendData(...);
   *** UHFInventorySingle_EX(...);
   *** UHFInventorySingle_R2000(...);
   *** UHFInventorySingle_sf(...);
   *** UHFInventorySingle_tc(...);
   *** UHFInventoryTID(...);
   *** UHFInventory_EX(...);
   *** UHFInventory_EX_BankPtrCnt(...);
   *** UHFInventory_EX_cnt(...);
   *** UHFJump2Boot(...);
   *** UHFJump2BootRecvData(...);
   *** UHFJump2BootSTM32(...);
   *** UHFJump2BootSendData(...);
   *** UHFKillTag(...);
   *** UHFKillTagEx(...);
   *** UHFKillTagRecvData(...);
   *** UHFKillTagSendData(...);
   *** UHFKillTagSingle(...);
   *** UHFLedOnOff(...);
   *** UHFLockMem(...);
   *** UHFLockMemEx(...);
   *** UHFLockMemSingle(...);
   *** UHFLockTagRecvData(...);
   *** UHFLockTagSendData(...);
   *** UHFOpenAndConnect(...);
   *** UHFOpenAndConnect_Ex(...);
   *** UHFReadData(...);
   *** UHFReadDataRecvData(...);
   *** UHFReadDataSendData(...);
   *** UHFReadDataSingle(...);
   *** UHFReadData_EX(...);
   *** UHFReadData_Ex2(...);
   *** UHFReadQTData(...);
   *** UHFReadQTDataSingle(...);
   *** UHFReadQTData_Ex(...);
   *** UHFSETSM4(...);
   *** UHFSetANT(...);
   *** UHFSetBTFrequency(...);
   *** UHFSetCW(...);
   *** UHFSetCWRecvData(...);
   *** UHFSetCWSendData(...);
   *** UHFSetEPCTIDMode(...);
   *** UHFSetEPCTIDModeRecvData(...);
   *** UHFSetEPCTIDModeSendData(...);
   *** UHFSetEPCUserMode(...);
   *** UHFSetFastID(...);
   *** UHFSetFilter(...);
   *** UHFSetFilterRecvData(...);
   *** UHFSetFilterSendData(...);
   *** UHFSetFilter_Ex(...);
   *** UHFSetFrequency(...);
   *** UHFSetFrequency_EX(...);
   *** UHFSetGen2RecvData(...);
   *** UHFSetGen2SendData(...);
   *** UHFSetJumpFrequencyRecvData(...);
   *** UHFSetJumpFrequencySendData(...);
   *** UHFSetMode(...);
   *** UHFSetParam(...);
   *** UHFSetPower(...);
   *** UHFSetPowerRecvData(...);
   *** UHFSetPowerSendData(...);
   *** UHFSetProtocolType(...);
   *** UHFSetProtocolTypeRecvData(...);
   *** UHFSetProtocolTypeSendData(...);
   *** UHFSetPwm(...);
   *** UHFSetRFLink(...);
   *** UHFSetRegionRecvData(...);
   *** UHFSetRegionSendData(...);
   *** UHFSetSM4(...);
   *** UHFSetSingelMode(...);
   *** UHFSetTagFocus(...);
   *** UHFSetTempProtectVal(...);
   *** UHFStartReadDataFromMultiTag(...);
   *** UHFStartUpdate(...);
   *** UHFStartUpdateRecvData(...);
   *** UHFStartUpdateSendData(...);
   *** UHFStopGet(...);
   *** UHFStopInventoryRecvData(...);
   *** UHFStopInventorySendData(...);
   *** UHFStopUpdate(...);
   *** UHFStopUpdateRecvData(...);
   *** UHFStopUpdateSendData(...);
   *** UHFUSBGetTagsDataRecvData(...);
   *** UHFUpdating(...);
   *** UHFUpdatingRecvData(...);
   *** UHFUpdatingSendData(...);
   *** UHFWriteData(...);
   *** UHFWriteDataRecvData(...);
   *** UHFWriteDataSendData(...);
   *** UHFWriteDataSingle(...);
   *** UHFWriteData_Ex2(...);
   *** UHFWriteQTData(...);
   *** UHFWriteQTDataSingle(...);
   *** UHFWriteQTData_Ex(...);
   *** UHTSetR6WorkmodeRecvData(...);
   *** UHTSetR6WorkmodeSendData(...);
   *** UartSwitch(...);
   *** Um7ProtocolConfig(...);
   *** Update_ReadInfo(...);
   *** UsbToFingerprint(...);
   *** UsbToHost(...);
   *** ZAZFingerFree(...);
   *** ZAZFingerInit(...);
   *** ZAZfingerDelChar(...);
   *** ZAZfingerDeviceInfo(...);
   *** ZAZfingerDownChar(...);
   *** ZAZfingerDownImageData(...);
   *** ZAZfingerDownImageStart(...);
   *** ZAZfingerGenerate(...);
   *** ZAZfingerGetBrokenId(...);
   *** ZAZfingerGetEmptyId(...);
   *** ZAZfingerGetEnrollCount(...);
   *** ZAZfingerGetImage(...);
   *** ZAZfingerGetStatus(...);
   *** ZAZfingerLoadChar(...);
   *** ZAZfingerMatch(...);
   *** ZAZfingerMerge(...);
   *** ZAZfingerReadParam(...);
   *** ZAZfingerSearch(...);
   *** ZAZfingerSetParam(...);
   *** ZAZfingerSledCtrl(...);
   *** ZAZfingerStoreChar(...);
   *** ZAZfingerTestConnection(...);
   *** ZAZfingerUpChar(...);
   *** ZAZfingerUpImage(...);
   *** ZAZfingerVerify(...);
   *** bdOff(...);
   *** bdOn(...);
   *** fips_encryption_decryption(...);
   *** fips_encryption_decryption_EX(...);
   *** getPsamId(...);
   *** infrared_read(...);
   *** infrared_write(...);
   *** ioctl_gpio(...);
   *** receiveData(...);
   *** receiveDataTAG(...);
   *** sendData(...);
   *** setBYLUart(...);
   *** spClose(...);
   *** spOpen(...);
}

-keep class com.rscja.deviceapi.DeviceConfiguration$DeviceInfo
-keepclassmembers class com.rscja.deviceapi.DeviceConfiguration$DeviceInfo {
   *** getModel(...);
   *** setModel(...);
   *** getUart(...);
   *** setUart(...);
}

-keep class com.rscja.deviceapi.DeviceConfiguration
-keepclassmembers class com.rscja.deviceapi.DeviceConfiguration {
   *** getBaudrate(...);
   *** setBaudrate(...);
   *** getDeviceName(...);
   *** setDeviceName(...);
   *** getModel(...);
   *** getPlatform(...);
   *** getUart(...);
   *** setUart(...);
   *** builder1DConfiguration(...);
   *** builder2DConfiguration(...);
   *** builderBDConfiguration(...);
   *** builderDefaultConfiguration(...);
   *** builderFingerprintConfiguration(...);
   *** builderInfraredConfiguration(...);
   *** builderLFConfiguration(...);
   *** builderPrinterConfiguration(...);
   *** builderRFIDConfiguration(...);
   *** builderUHFConfiguration(...);
}

-keep class com.rscja.deviceapi.Fingerprint$BufferEnum
-keepclassmembers class com.rscja.deviceapi.Fingerprint$BufferEnum {
   *** getValue(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.rscja.deviceapi.Fingerprint
-keepclassmembers class com.rscja.deviceapi.Fingerprint {
   <init>(...);
   *** getDeviceAPI(...);
   *** getImage(...);
   *** getInstance(...);
   *** getRandomData(...);
   *** getVersion(...);
   *** autoEnroll(...);
   *** autoMatch(...);
   *** deletChar(...);
   *** downChar(...);
   *** empty(...);
   *** free(...);
   *** genChar(...);
   *** init(...);
   *** init(...);
   *** loadChar(...);
   *** match(...);
   *** readChipSN(...);
   *** readSysPara(...);
   *** readSysParaMore(...);
   *** regModel(...);
   *** search(...);
   *** setDeviceName(...);
   *** setManuFacture(...);
   *** setPWD(...);
   *** setReg(...);
   *** storChar(...);
   *** upChar(...);
   *** upImage(...);
   *** validPWD(...);
   *** validTempleteNum(...);
}

-keep class com.rscja.deviceapi.FingerprintWithFIPS$DataFormat
-keepclassmembers class com.rscja.deviceapi.FingerprintWithFIPS$DataFormat {
   *** valueOf(...);
   *** values(...);
}

-keep class com.rscja.deviceapi.FingerprintWithFIPS$EnrollCallBack
-keepclassmembers class com.rscja.deviceapi.FingerprintWithFIPS$EnrollCallBack {
}

-keep class com.rscja.deviceapi.FingerprintWithFIPS$FingerprintInfo
-keepclassmembers class com.rscja.deviceapi.FingerprintWithFIPS$FingerprintInfo {
   <init>(...);
   *** getId(...);
   *** setId(...);
   *** getVersions(...);
   *** setVersions(...);
}

-keep class com.rscja.deviceapi.FingerprintWithFIPS$GRABCallBack
-keepclassmembers class com.rscja.deviceapi.FingerprintWithFIPS$GRABCallBack {
}

-keep class com.rscja.deviceapi.FingerprintWithFIPS$IdentificationCallBack
-keepclassmembers class com.rscja.deviceapi.FingerprintWithFIPS$IdentificationCallBack {
}

-keep class com.rscja.deviceapi.FingerprintWithFIPS$PtCaptureCallBack
-keepclassmembers class com.rscja.deviceapi.FingerprintWithFIPS$PtCaptureCallBack {
}

-keep class com.rscja.deviceapi.FingerprintWithFIPS$TemplateVerifyCallBack
-keepclassmembers class com.rscja.deviceapi.FingerprintWithFIPS$TemplateVerifyCallBack {
}

-keep class com.rscja.deviceapi.FingerprintWithFIPS$ThreadEnroll
-keepclassmembers class com.rscja.deviceapi.FingerprintWithFIPS$ThreadEnroll {
}

-keep class com.rscja.deviceapi.FingerprintWithFIPS$ThreadGRAB
-keepclassmembers class com.rscja.deviceapi.FingerprintWithFIPS$ThreadGRAB {
}

-keep class com.rscja.deviceapi.FingerprintWithFIPS$ThreadIdentification
-keepclassmembers class com.rscja.deviceapi.FingerprintWithFIPS$ThreadIdentification {
   *** getData(...);
}

-keep class com.rscja.deviceapi.FingerprintWithFIPS$ThreadPtCapture
-keepclassmembers class com.rscja.deviceapi.FingerprintWithFIPS$ThreadPtCapture {
}

-keep class com.rscja.deviceapi.FingerprintWithFIPS$ThreadTemplateVerify
-keepclassmembers class com.rscja.deviceapi.FingerprintWithFIPS$ThreadTemplateVerify {
   <init>(...);
   *** getData(...);
}

-keep class com.rscja.deviceapi.FingerprintWithFIPS
-keepclassmembers class com.rscja.deviceapi.FingerprintWithFIPS {
   <init>(...);
   *** getDeviceAPI(...);
   *** getFingersCount(...);
   *** getID(...);
   *** getInstance(...);
   *** getPTInfo(...);
   *** Encryption(...);
   *** Encryption(...);
   *** Verify(...);
   *** decryption(...);
   *** decryption(...);
   *** decryption(...);
   *** deleteAllFingers(...);
   *** enroll(...);
   *** free(...);
   *** generateImg(...);
   *** grab(...);
   *** init(...);
   *** init(...);
   *** ptCapture(...);
   *** ptConvertTemplateEx(...);
   *** responseCancel(...);
   *** responseContinue(...);
   *** setEnrollCallBack(...);
   *** setGrabCallBack(...);
   *** setID(...);
   *** setIdentificationCallBack(...);
   *** setPtCaptureCallBack(...);
   *** setTemplateVerifyCallBack(...);
   *** startEnroll(...);
   *** startGRAB(...);
   *** startIdentification(...);
   *** startPtCapture(...);
   *** startTemplateVerify(...);
   *** stopEnroll(...);
   *** stopGRAB(...);
   *** stopIdentification(...);
   *** stopPtCapture(...);
   *** stopTemplateVerify(...);
   *** verifyALL(...);
}

-keep class com.rscja.deviceapi.FingerprintWithMorpho$EnrollCallBack
-keepclassmembers class com.rscja.deviceapi.FingerprintWithMorpho$EnrollCallBack {
}

-keep class com.rscja.deviceapi.FingerprintWithMorpho$IdentificationCallBack
-keepclassmembers class com.rscja.deviceapi.FingerprintWithMorpho$IdentificationCallBack {
}

-keep class com.rscja.deviceapi.FingerprintWithMorpho$MorphoMessage
-keepclassmembers class com.rscja.deviceapi.FingerprintWithMorpho$MorphoMessage {
   <init>(...);
}

-keep class com.rscja.deviceapi.FingerprintWithMorpho$PtCaptureCallBack
-keepclassmembers class com.rscja.deviceapi.FingerprintWithMorpho$PtCaptureCallBack {
}

-keep class com.rscja.deviceapi.FingerprintWithMorpho$TemplateVerifyCallBack
-keepclassmembers class com.rscja.deviceapi.FingerprintWithMorpho$TemplateVerifyCallBack {
}

-keep class com.rscja.deviceapi.FingerprintWithMorpho$ThreadEnroll
-keepclassmembers class com.rscja.deviceapi.FingerprintWithMorpho$ThreadEnroll {
}

-keep class com.rscja.deviceapi.FingerprintWithMorpho$ThreadIdentification
-keepclassmembers class com.rscja.deviceapi.FingerprintWithMorpho$ThreadIdentification {
   *** getData(...);
}

-keep class com.rscja.deviceapi.FingerprintWithMorpho$ThreadPtCapture
-keepclassmembers class com.rscja.deviceapi.FingerprintWithMorpho$ThreadPtCapture {
}

-keep class com.rscja.deviceapi.FingerprintWithMorpho$ThreadPtCapturePKComp
-keepclassmembers class com.rscja.deviceapi.FingerprintWithMorpho$ThreadPtCapturePKComp {
}

-keep class com.rscja.deviceapi.FingerprintWithMorpho$ThreadTemplateVerify
-keepclassmembers class com.rscja.deviceapi.FingerprintWithMorpho$ThreadTemplateVerify {
   <init>(...);
   *** getData(...);
}

-keep class com.rscja.deviceapi.FingerprintWithMorpho$TimeOutThread
-keepclassmembers class com.rscja.deviceapi.FingerprintWithMorpho$TimeOutThread {
   <init>(...);
}

-keep class com.rscja.deviceapi.FingerprintWithMorpho
-keepclassmembers class com.rscja.deviceapi.FingerprintWithMorpho {
   <init>(...);
   *** getDeviceAPI(...);
   *** getInstance(...);
   *** getMorphoDescriptor(...);
   *** getMorphoPIDSN(...);
   *** getMorphoSecurityLevel(...);
   *** free(...);
   *** getStatusMsg(...);
   *** init(...);
   *** morphoEraseAllBase(...);
   *** setIdentificationCallBack(...);
   *** setMorphoLoadKs(...);
   *** setMorphoSecurityLevel(...);
   *** setPtCaptureCallBack(...);
   *** setPtEnrollCallBack(...);
   *** setTemplateVerifyCallBack(...);
   *** setTimeOut(...);
   *** startEnroll(...);
   *** startEnroll(...);
   *** startIdentification(...);
   *** startPtCapture(...);
   *** startPtCapturePKComp(...);
   *** startTemplateVerify(...);
   *** stopEnroll(...);
   *** stopIdentification(...);
   *** stopPtCapture(...);
}

-keep class com.rscja.deviceapi.FingerprintWithZAZ$BufferEnum
-keepclassmembers class com.rscja.deviceapi.FingerprintWithZAZ$BufferEnum {
   *** getValue(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.rscja.deviceapi.FingerprintWithZAZ
-keepclassmembers class com.rscja.deviceapi.FingerprintWithZAZ {
   <init>(...);
   *** getDeviceAPI(...);
   *** getDeviceInfo(...);
   *** getInstance(...);
   *** isConnection(...);
   *** delete(...);
   *** downChar(...);
   *** downImageData(...);
   *** exists(...);
   *** free(...);
   *** generate(...);
   *** getBrokenId(...);
   *** getEmptyId(...);
   *** getEnrollCount(...);
   *** getErrorMsg(...);
   *** getImage(...);
   *** getParam(...);
   *** init(...);
   *** loadChar(...);
   *** match(...);
   *** merge(...);
   *** search(...);
   *** setParam(...);
   *** sledCtrl(...);
   *** storeChar(...);
   *** upChar(...);
   *** upImageData(...);
   *** verify(...);
}

-keep class com.rscja.deviceapi.Infrared
-keepclassmembers class com.rscja.deviceapi.Infrared {
   *** getIDAndPowerWithWattmeter(...);
   *** getInstance(...);
   *** close(...);
   *** closeLED(...);
   *** getIDAndPowerWithWattmeter(...);
   *** open(...);
   *** open(...);
   *** open(...);
   *** open(...);
   *** openLED(...);
   *** receive(...);
   *** send(...);
   *** switchBaudrate(...);
}

-keep class com.rscja.deviceapi.LedLight
-keepclassmembers class com.rscja.deviceapi.LedLight {
   <init>(...);
   *** getInstance(...);
   *** close(...);
   *** open(...);
}

-keep class com.rscja.deviceapi.Module
-keepclassmembers class com.rscja.deviceapi.Module {
   *** getDeviceAPI(...);
   *** getInstance(...);
   *** closeSerail(...);
   *** free(...);
   *** init(...);
   *** init(...);
   *** init(...);
   *** ioctl_gpio(...);
   *** openSerail(...);
   *** powerOff(...);
   *** powerOn(...);
   *** receive(...);
   *** receiveEx(...);
   *** send(...);
   *** sendAndReceive(...);
   *** uartSwitch2(...);
}

-keep class com.rscja.deviceapi.Printer$BarcodeType
-keepclassmembers class com.rscja.deviceapi.Printer$BarcodeType {
   *** valueOf(...);
   *** values(...);
}

-keep class com.rscja.deviceapi.Printer$MeesageThread
-keepclassmembers class com.rscja.deviceapi.Printer$MeesageThread {
}

-keep class com.rscja.deviceapi.Printer$PrinterStatus
-keepclassmembers class com.rscja.deviceapi.Printer$PrinterStatus {
   *** valueOf(...);
   *** values(...);
}

-keep class com.rscja.deviceapi.Printer$PrinterStatusCallBack
-keepclassmembers class com.rscja.deviceapi.Printer$PrinterStatusCallBack {
}

-keep class com.rscja.deviceapi.Printer
-keepclassmembers class com.rscja.deviceapi.Printer {
   <init>(...);
   *** getInstance(...);
   *** clearCache(...);
   *** free(...);
   *** init(...);
   *** print(...);
   *** print(...);
   *** print(...);
   *** print(...);
   *** print(...);
   *** print(...);
   *** print(...);
   *** receiveData(...);
   *** restoreDefault(...);
   *** sendAndReceiveData(...);
   *** sendData(...);
   *** setBarcodeHRI(...);
   *** setBarcodeHeight(...);
   *** setBarcodeWidth(...);
   *** setFeedRow(...);
   *** setPrintCharacterStyle(...);
   *** setPrintGrayLevel(...);
   *** setPrintLeftMargin(...);
   *** setPrintRightMargin(...);
   *** setPrintRowSpacing(...);
   *** setPrintSpeed(...);
   *** setPrinterStatusCallBack(...);
   *** setPrinterStatusCallBackEnable(...);
}

-keep class com.rscja.deviceapi.PSAM
-keepclassmembers class com.rscja.deviceapi.PSAM {
   *** getDeviceAPI(...);
   *** getInstance(...);
   *** Upgrade(...);
   *** executeCmd(...);
   *** free(...);
   *** init(...);
}

-keep class com.rscja.deviceapi.RFIDBase
-keepclassmembers class com.rscja.deviceapi.RFIDBase {
   <init>(...);
   *** getDeviceAPI(...);
   *** getInstance(...);
   *** getVersion(...);
   *** free(...);
   *** init(...);
   *** init(...);
   *** rfidUpgrade(...);
}

-keep class com.rscja.deviceapi.RFIDWithISO14443A$DESFireEncryptionTypekEnum
-keepclassmembers class com.rscja.deviceapi.RFIDWithISO14443A$DESFireEncryptionTypekEnum {
   *** getValue(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.rscja.deviceapi.RFIDWithISO14443A$DESFireFileTypekEnum
-keepclassmembers class com.rscja.deviceapi.RFIDWithISO14443A$DESFireFileTypekEnum {
   *** getValue(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.rscja.deviceapi.RFIDWithISO14443A$KeyType
-keepclassmembers class com.rscja.deviceapi.RFIDWithISO14443A$KeyType {
   *** valueOf(...);
   *** values(...);
}

-keep class com.rscja.deviceapi.RFIDWithISO14443A$TagType
-keepclassmembers class com.rscja.deviceapi.RFIDWithISO14443A$TagType {
   *** valueOf(...);
   *** values(...);
}

-keep class com.rscja.deviceapi.RFIDWithISO14443A
-keepclassmembers class com.rscja.deviceapi.RFIDWithISO14443A {
   <init>(...);
   *** getInstance(...);
   *** DESFire_AddApp(...);
   *** DESFire_AddStdFile(...);
   *** DESFire_AddValueFile(...);
   *** DESFire_Auth(...);
   *** DESFire_ChangeFileSetting(...);
   *** DESFire_ChangeKey(...);
   *** DESFire_ChangeKeySetting(...);
   *** DESFire_CreditValueFile(...);
   *** DESFire_DebitValueFile(...);
   *** DESFire_DelApp(...);
   *** DESFire_DelFile(...);
   *** DESFire_FormatCard(...);
   *** DESFire_GetApps(...);
   *** DESFire_GetFileIds(...);
   *** DESFire_GetFileSetting(...);
   *** DESFire_GetFiles(...);
   *** DESFire_GetKeySetting(...);
   *** DESFire_GetPiccInfo(...);
   *** DESFire_RatsAndPss(...);
   *** DESFire_ReadStdFile(...);
   *** DESFire_ReadValueFile(...);
   *** DESFire_SelApp(...);
   *** DESFire_WriteStdFile(...);
   *** DESFire_selCpy(...);
   *** ISO14443A_decrement(...);
   *** ISO14443A_increment(...);
   *** ISO14443A_initval(...);
   *** ISO14443A_readval(...);
   *** M1_ReadData(...);
   *** VerifySector(...);
   *** getIntegerSomeBit(...);
   *** read(...);
   *** read(...);
   *** readAllData(...);
   *** request(...);
   *** sendBusCMD(...);
   *** write(...);
   *** write(...);
}

-keep class com.rscja.deviceapi.RFIDWithISO14443A4CPU
-keepclassmembers class com.rscja.deviceapi.RFIDWithISO14443A4CPU {
   <init>(...);
   *** getInstance(...);
   *** rats(...);
   *** reset(...);
   *** sendCommand(...);
}

-keep class com.rscja.deviceapi.RFIDWithISO14443B
-keepclassmembers class com.rscja.deviceapi.RFIDWithISO14443B {
   <init>(...);
   *** getInstance(...);
   *** getUID(...);
   *** getUIDBytes(...);
   *** reset(...);
   *** sendCommand(...);
}

-keep class com.rscja.deviceapi.RFIDWithISO15693$TagType
-keepclassmembers class com.rscja.deviceapi.RFIDWithISO15693$TagType {
   *** getValue(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.rscja.deviceapi.RFIDWithISO15693
-keepclassmembers class com.rscja.deviceapi.RFIDWithISO15693 {
   <init>(...);
   *** getInstance(...);
   *** genericFunction(...);
   *** genericFunction_ex(...);
   *** inventory(...);
   *** lockAFI(...);
   *** lockDSFID(...);
   *** read(...);
   *** read(...);
   *** write(...);
   *** write(...);
   *** writeAFI(...);
   *** writeDSFID(...);
}

-keep class com.rscja.deviceapi.RFIDWithLF
-keepclassmembers class com.rscja.deviceapi.RFIDWithLF {
   *** getDeviceAPI(...);
   *** getHardwareVersion(...);
   *** getInstance(...);
   *** getUIDWith4450Card(...);
   *** getUIDWithHID(...);
   *** getUIDWithHitagS(...);
   *** EM125k_ReadHitag1(...);
   *** configFDXTag(...);
   *** free(...);
   *** init(...);
   *** initWithNeedleTag(...);
   *** readAnimalTags(...);
   *** readDataWith4305Card(...);
   *** readDataWithHitagS(...);
   *** readDataWithIDCard(...);
   *** readWithNeedleTag(...);
   *** writeDataWith4305Card(...);
   *** writeDataWithHitagS(...);
}

-keep class com.rscja.deviceapi.RFIDWithUHF$BankEnum
-keepclassmembers class com.rscja.deviceapi.RFIDWithUHF$BankEnum {
   *** getValue(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.rscja.deviceapi.RFIDWithUHF$LockModeEnum
-keepclassmembers class com.rscja.deviceapi.RFIDWithUHF$LockModeEnum {
   *** getValue(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.rscja.deviceapi.RFIDWithUHF$SingelModeEnum
-keepclassmembers class com.rscja.deviceapi.RFIDWithUHF$SingelModeEnum {
   *** getValue(...);
}

-keep class com.rscja.deviceapi.RFIDWithUHF$SingleModeEnum
-keepclassmembers class com.rscja.deviceapi.RFIDWithUHF$SingleModeEnum {
   *** getValue(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.rscja.deviceapi.RFIDWithUHF
-keepclassmembers class com.rscja.deviceapi.RFIDWithUHF {
   *** getDeviceAPI(...);
   *** getFrequencyMode(...);
   *** getHardwareType(...);
   *** getInstance(...);
   *** getMode(...);
   *** getPower(...);
   *** getProtocol(...);
   *** getRFLink(...);
   *** getReadMode(...);
   *** GetTempProtectVal(...);
   *** getTemperature(...);
   *** GetGen2(...);
   *** GetTempProtectVal(...);
   *** SetGen2(...);
   *** UHFBlockPermalock(...);
   *** binaryString2hexString(...);
   *** blockWriteData(...);
   *** convertUiiToEPC(...);
   *** crcOff(...);
   *** crcOn(...);
   *** eraseData(...);
   *** eraseData(...);
   *** eraseData(...);
   *** free(...);
   *** generateLockCode(...);
   *** getEM4325Temperature(...);
   *** getInventoryBID(...);
   *** getParam(...);
   *** getPwm(...);
   *** getQTPara(...);
   *** init(...);
   *** init_R2000(...);
   *** inventoryBank_sf(...);
   *** inventorySingleTag(...);
   *** inventorySingleTagBytes(...);
   *** inventorySingleTagEPC_TID_USER(...);
   *** inventorySingleTagWithR2000(...);
   *** inventorySingleTag_sf(...);
   *** inventorySingleTag_tc(...);
   *** killTag(...);
   *** killTag(...);
   *** killTag(...);
   *** killTag_Ex(...);
   *** lockMem(...);
   *** lockMem(...);
   *** lockMem(...);
   *** lockMem_EX(...);
   *** openInventoryEPCAndTIDMode(...);
   *** readData(...);
   *** readData(...);
   *** readData(...);
   *** readDataEx(...);
   *** readDataWithQT(...);
   *** readDataWithQT(...);
   *** readDataWithQT(...);
   *** readTagData_sf(...);
   *** readTagFromBuffer(...);
   *** readTagFromR2000Buffer(...);
   *** readUidFromBuffer(...);
   *** setEPCTIDMode(...);
   *** setEPCTIDUserMode(...);
   *** setFastID(...);
   *** setFilter(...);
   *** setFilter(...);
   *** setFilter(...);
   *** setFreHop(...);
   *** setFrequencyMode(...);
   *** setInventoryBID(...);
   *** setMode(...);
   *** setParam(...);
   *** setPower(...);
   *** setProtocol(...);
   *** setPwm(...);
   *** setQTPara(...);
   *** setRFLink(...);
   *** setReadMode(...);
   *** setTagFocus(...);
   *** setUart(...);
   *** startInventory(...);
   *** startInventoryTag(...);
   *** startInventoryTag(...);
   *** startInventory_BankPtrCnt(...);
   *** stopInventory(...);
   *** uhfBlockPermalock(...);
   *** uhfDeactivate(...);
   *** uhfDwell(...);
   *** uhfGBTagLock(...);
   *** uhfGBTagLock(...);
   *** uhfJump2Boot(...);
   *** uhfStartUpdate(...);
   *** uhfStopUpdate(...);
   *** uhfUpdating(...);
   *** writeData(...);
   *** writeData(...);
   *** writeData(...);
   *** writeDataWithQT(...);
   *** writeDataWithQT(...);
   *** writeDataWithQT(...);
   *** writeDataWithQT_Ex(...);
   *** writeData_Ex(...);
}

-keep class com.rscja.deviceapi.RFIDWithUHF706
-keepclassmembers class com.rscja.deviceapi.RFIDWithUHF706 {
   *** getDeviceAPI(...);
   *** getInstance(...);
   *** getRTC(...);
   *** Auth_CertificationChain(...);
   *** EventReport(...);
   *** SetInventorySper(...);
   *** SetTestMode(...);
   *** TransBuf(...);
   *** TransData(...);
   *** free(...);
   *** getAccess(...);
   *** getPara(...);
   *** init(...);
   *** readInfo(...);
   *** requestRandom(...);
   *** requsetReadPart(...);
   *** requsetWritePart(...);
   *** sendActiveFile(...);
   *** sendAuthData(...);
   *** sendUserInfo(...);
   *** setFrequency(...);
   *** setPara(...);
   *** setPower(...);
   *** setRTC(...);
   *** setWorkMode(...);
   *** writeSpecialPart(...);
}

-keep class com.rscja.deviceapi.RFIDWithUHFA8$NotifyThread
-keepclassmembers class com.rscja.deviceapi.RFIDWithUHFA8$NotifyThread {
   *** activatorNotify(...);
   *** stopThread(...);
}

-keep class com.rscja.deviceapi.RFIDWithUHFA8
-keepclassmembers class com.rscja.deviceapi.RFIDWithUHFA8 {
   <init>(...);
   *** getInstance(...);
   *** getANT(...);
   *** setANT(...);
   *** successNotify(...);
}

-keep class com.rscja.deviceapi.RFIDWithUHFBLE
-keepclassmembers class com.rscja.deviceapi.RFIDWithUHFBLE {
   *** getAllTagTotalFromFlash(...);
   *** getCW(...);
   *** getFrequencyMode(...);
   *** getInstance(...);
   *** getPower(...);
   *** getProtocol(...);
   *** getRFLink(...);
   *** getTagDataFromFlash(...);
   *** getTemperature(...);
   *** getVersion(...);
   *** blockWriteData(...);
   *** deleteAllTagToFlash(...);
   *** eraseData(...);
   *** eraseData(...);
   *** generateLockCode(...);
   *** getEPCAndTIDUserMode(...);
   *** getGen2(...);
   *** getPwm(...);
   *** getQTPara(...);
   *** inventorySingleTag(...);
   *** killTag(...);
   *** killTag(...);
   *** lockMem(...);
   *** lockMem(...);
   *** readData(...);
   *** readData(...);
   *** readTagFromBuffer(...);
   *** readTagFromBufferList(...);
   *** readTagFromBufferList_EpcTidUser(...);
   *** setCW(...);
   *** setEPCAndTIDMode(...);
   *** setEPCAndTIDUserMode(...);
   *** setEPCMode(...);
   *** setFastID(...);
   *** setFilter(...);
   *** setFreHop(...);
   *** setFrequencyMode(...);
   *** setGen2(...);
   *** setPower(...);
   *** setProtocol(...);
   *** setPwm(...);
   *** setQTPara(...);
   *** setR6Workmode(...);
   *** setRFLink(...);
   *** setTagFocus(...);
   *** startInventoryTag(...);
   *** stopInventory(...);
   *** uhfBlockPermalock(...);
   *** uhfGBTagLock(...);
   *** uhfGBTagLock(...);
   *** uhfJump2Boot(...);
   *** uhfJump2BootSTM32(...);
   *** uhfStartUpdate(...);
   *** uhfStopUpdate(...);
   *** uhfUpdating(...);
   *** writeData(...);
   *** writeData(...);
}

-keep class com.rscja.deviceapi.RFIDWithUHFBluetooth$BTStatusCallback
-keepclassmembers class com.rscja.deviceapi.RFIDWithUHFBluetooth$BTStatusCallback {
}

-keep class com.rscja.deviceapi.RFIDWithUHFBluetooth$BankEnum
-keepclassmembers class com.rscja.deviceapi.RFIDWithUHFBluetooth$BankEnum {
   *** getValue(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.rscja.deviceapi.RFIDWithUHFBluetooth$DataReceiveBTData
-keepclassmembers class com.rscja.deviceapi.RFIDWithUHFBluetooth$DataReceiveBTData {
   *** receiveBTData(...);
}

-keep class com.rscja.deviceapi.RFIDWithUHFBluetooth$KeyEventCallback
-keepclassmembers class com.rscja.deviceapi.RFIDWithUHFBluetooth$KeyEventCallback {
}

-keep class com.rscja.deviceapi.RFIDWithUHFBluetooth$ScanBTCallback
-keepclassmembers class com.rscja.deviceapi.RFIDWithUHFBluetooth$ScanBTCallback {
}

-keep class com.rscja.deviceapi.RFIDWithUHFBluetooth$StatusEnum
-keepclassmembers class com.rscja.deviceapi.RFIDWithUHFBluetooth$StatusEnum {
   *** valueOf(...);
   *** values(...);
}

-keep class com.rscja.deviceapi.RFIDWithUHFBluetooth
-keepclassmembers class com.rscja.deviceapi.RFIDWithUHFBluetooth {
   *** getAllTagTotalFromFlash(...);
   *** getBTVersion(...);
   *** getBattery(...);
   *** getBluetoothMode(...);
   *** setBluetoothMode(...);
   *** getCW(...);
   *** getConnectStatus(...);
   *** getDeviceAPI(...);
   *** getFrequencyMode(...);
   *** getInstance(...);
   *** getPower(...);
   *** getProtocol(...);
   *** getR2000Temperature(...);
   *** getR2000Version(...);
   *** getSTM32Version(...);
   *** getTagDataFromFlash(...);
   *** authentication(...);
   *** authentication(...);
   *** connect(...);
   *** convertUiiToEPC(...);
   *** deleteAllTagToFlash(...);
   *** disconnect(...);
   *** eraseData(...);
   *** eraseData(...);
   *** free(...);
   *** getEpcTidUserMode(...);
   *** getGen2(...);
   *** init(...);
   *** inventorySingleTag(...);
   *** inventorySingleTag_EpcTidUser(...);
   *** kill(...);
   *** kill(...);
   *** lockMem(...);
   *** lockMem(...);
   *** readData(...);
   *** readData(...);
   *** readTagFromBuffer(...);
   *** readTagFromBuffer_EpcTidUser(...);
   *** scanBTDevices(...);
   *** scanBarcode(...);
   *** scanBarcodeToBytes(...);
   *** setBeep(...);
   *** setCW(...);
   *** setEpcTidUserMode(...);
   *** setFreHop(...);
   *** setFrequencyMode(...);
   *** setGen2(...);
   *** setKeyEventCallback(...);
   *** setPower(...);
   *** setProtocol(...);
   *** setR6Workmode(...);
   *** setRemoteBluetoothName(...);
   *** setStatusCallback(...);
   *** setTimeOut(...);
   *** startInventoryTag(...);
   *** stopInventoryTag(...);
   *** stopScanBTDevices(...);
   *** uhfDecryptSM4(...);
   *** uhfEncReadUser(...);
   *** uhfEncWriteUser(...);
   *** uhfEncryptSM4(...);
   *** uhfEndUpdate(...);
   *** uhfGBTagLock(...);
   *** uhfGBTagLock(...);
   *** uhfGetSMKey(...);
   *** uhfKeydataMac(...);
   *** uhfReBoot(...);
   *** uhfSetSM4Key(...);
   *** uhfStartUpdate(...);
   *** uhfUpdateData(...);
   *** writeData(...);
   *** writeData(...);
}

-keep class com.rscja.deviceapi.RFIDWithUHFUART
-keepclassmembers class com.rscja.deviceapi.RFIDWithUHFUART {
   <init>(...);
   *** getCW(...);
   *** getConnectStatus(...);
   *** getDeviceAPI(...);
   *** getFrequencyMode(...);
   *** getInstance(...);
   *** getPower(...);
   *** getProtocol(...);
   *** getRFLink(...);
   *** getTemperature(...);
   *** getVersion(...);
   *** blockWriteData(...);
   *** eraseData(...);
   *** eraseData(...);
   *** free(...);
   *** generateLockCode(...);
   *** getEPCAndTIDUserMode(...);
   *** getGen2(...);
   *** getPwm(...);
   *** getQTPara(...);
   *** init(...);
   *** init(...);
   *** init_R2000(...);
   *** inventorySingleTag(...);
   *** killTag(...);
   *** killTag(...);
   *** lockMem(...);
   *** lockMem(...);
   *** readData(...);
   *** readData(...);
   *** readTagFromBuffer(...);
   *** setCW(...);
   *** setEPCAndTIDMode(...);
   *** setEPCAndTIDUserMode(...);
   *** setEPCMode(...);
   *** setFastID(...);
   *** setFilter(...);
   *** setFreHop(...);
   *** setFrequencyMode(...);
   *** setGen2(...);
   *** setPower(...);
   *** setProtocol(...);
   *** setPwm(...);
   *** setQTPara(...);
   *** setRFLink(...);
   *** setStatusCallback(...);
   *** setTagFocus(...);
   *** setUart(...);
   *** startInventoryTag(...);
   *** startInventoryTag(...);
   *** stopInventory(...);
   *** uhfBlockPermalock(...);
   *** uhfGBTagLock(...);
   *** uhfGBTagLock(...);
   *** uhfJump2Boot(...);
   *** uhfStartUpdate(...);
   *** uhfStopUpdate(...);
   *** uhfUpdating(...);
   *** writeData(...);
   *** writeData(...);
}

-keep class com.rscja.deviceapi.RFIDWithUHFUSB$UsbReceiver
-keepclassmembers class com.rscja.deviceapi.RFIDWithUHFUSB$UsbReceiver {
   *** onReceive(...);
}

-keep class com.rscja.deviceapi.RFIDWithUHFUSB
-keepclassmembers class com.rscja.deviceapi.RFIDWithUHFUSB {
   *** getAllTagTotalFromFlash(...);
   *** getBattery(...);
   *** getCW(...);
   *** getConnectStatus(...);
   *** getFrequencyMode(...);
   *** getInitErrCode(...);
   *** getInstance(...);
   *** getPower(...);
   *** getProtocol(...);
   *** getRFLink(...);
   *** getTagDataFromFlash(...);
   *** getTemperature(...);
   *** getVersion(...);
   *** blockWriteData(...);
   *** deleteAllTagToFlash(...);
   *** eraseData(...);
   *** eraseData(...);
   *** free(...);
   *** generateLockCode(...);
   *** getEPCAndTIDUserMode(...);
   *** getGen2(...);
   *** getPwm(...);
   *** getQTPara(...);
   *** getUsbDeviceList(...);
   *** init(...);
   *** init(...);
   *** inventorySingleTag(...);
   *** killTag(...);
   *** killTag(...);
   *** lockMem(...);
   *** lockMem(...);
   *** readData(...);
   *** readData(...);
   *** readTagFromBuffer(...);
   *** readTagFromBufferList(...);
   *** readTagFromBufferList_EpcTidUser(...);
   *** scanBarcode(...);
   *** scanBarcodeToBytes(...);
   *** setBeep(...);
   *** setCW(...);
   *** setEPCAndTIDMode(...);
   *** setEPCAndTIDUserMode(...);
   *** setEPCMode(...);
   *** setFastID(...);
   *** setFilter(...);
   *** setFreHop(...);
   *** setFrequencyMode(...);
   *** setGen2(...);
   *** setKeyEventCallback(...);
   *** setPower(...);
   *** setProtocol(...);
   *** setPwm(...);
   *** setQTPara(...);
   *** setRFLink(...);
   *** setStatusCallback(...);
   *** setTagFocus(...);
   *** startInventoryTag(...);
   *** stopInventory(...);
   *** uhfBlockPermalock(...);
   *** uhfGBTagLock(...);
   *** uhfGBTagLock(...);
   *** uhfJump2Boot(...);
   *** uhfStartUpdate(...);
   *** uhfStopUpdate(...);
   *** uhfUpdating(...);
   *** writeData(...);
   *** writeData(...);
}

-keep class com.rscja.deviceapi.ScanerLedLight$OffTask
-keepclassmembers class com.rscja.deviceapi.ScanerLedLight$OffTask {
   <init>(...);
   *** run(...);
}

-keep class com.rscja.deviceapi.ScanerLedLight
-keepclassmembers class com.rscja.deviceapi.ScanerLedLight {
   <init>(...);
   *** getInstance(...);
   *** On(...);
   *** blink(...);
   *** blink(...);
   *** closeAuxiliaryLight(...);
   *** free(...);
   *** init(...);
   *** off(...);
   *** openAuxiliaryLight(...);
}

-keep class com.rscja.deviceapi.SPI
-keepclassmembers class com.rscja.deviceapi.SPI {
   *** getInstance(...);
   *** free(...);
   *** init(...);
   *** receive(...);
   *** send(...);
}

-keep class com.rscja.deviceapi.UHFCustomAPI
-keepclassmembers class com.rscja.deviceapi.UHFCustomAPI {
   *** getDeviceAPI(...);
   *** getInstance(...);
   *** readTagEPCAndTamperAlarm(...);
   *** setEPCAndTamperAlarm(...);
}

-keep class com.rscja.deviceapi.UHFProtocolParse
-keepclassmembers class com.rscja.deviceapi.UHFProtocolParse {
   <init>(...);
   *** getDeviceAPI(...);
   *** getInstance(...);
   *** GBTagLockSendData(...);
   *** PrintLog(...);
   *** PrintLog(...);
   *** PrintLog(...);
   *** UHFStopUpdateSendData(...);
   *** blockEraseDataSendData(...);
   *** blockWriteDataSendData(...);
   *** btDeleteAllTagToFlashSendData(...);
   *** btGetAllTagNumFromFlashSendData(...);
   *** btGetTagDataFromFlashSendData(...);
   *** generateLockCode(...);
   *** getBatterySendData(...);
   *** getBeepSendData(...);
   *** getCWSendData(...);
   *** getEPCTIDModeSendData(...);
   *** getFrequencyModeSendData(...);
   *** getGen2SendData(...);
   *** getInventorySingleTagSendData(...);
   *** getKillSendData(...);
   *** getLockSendData(...);
   *** getPowerSendData(...);
   *** getProtocolSendData(...);
   *** getReadSendData(...);
   *** getReadTagSendData(...);
   *** getSTM32VersionSendData(...);
   *** getScanBarcodeSendData(...);
   *** getSendData(...);
   *** getStartInventoryTagSendData(...);
   *** getStopInventorySendData(...);
   *** getTemperatureSendData(...);
   *** getVersionSendData(...);
   *** getWriteSendData(...);
   *** parseBarcodeData(...);
   *** parseBatteryData(...);
   *** parseBeepData(...);
   *** parseBlockEraseDataData(...);
   *** parseBlockWriteData(...);
   *** parseBtDeleteAllTagToFlashData(...);
   *** parseBtGetAllTagNumFromFlashData(...);
   *** parseBtGetTagDataFromFlashData(...);
   *** parseGBTagLockData(...);
   *** parseGetCWData(...);
   *** parseGetEPCTIDModeData(...);
   *** parseGetFrequencyModeData(...);
   *** parseGetGen2Data(...);
   *** parseGetPowerData(...);
   *** parseGetProtocolData(...);
   *** parseInventorySingleTagData(...);
   *** parseKillData(...);
   *** parseLockData(...);
   *** parseReadData(...);
   *** parseReadTagDataEPC_TID_USER(...);
   *** parseReadTagData_EPC(...);
   *** parseSTM32VersionData(...);
   *** parseSetCWData(...);
   *** parseSetEPCAndTIDModeData(...);
   *** parseSetEPCAndTIDUserModeData(...);
   *** parseSetEPCModeData(...);
   *** parseSetFilterData(...);
   *** parseSetFrequencyModeData(...);
   *** parseSetGen2Data(...);
   *** parseSetJumpFrequencyData(...);
   *** parseSetPowerData(...);
   *** parseSetProtocolData(...);
   *** parseSetR6WorkModeData(...);
   *** parseStartInventoryTagData(...);
   *** parseStopInventoryData(...);
   *** parseTemperatureData(...);
   *** parseUHFJump2BootData(...);
   *** parseUHFStartUpdateData(...);
   *** parseUHFStopUpdateData(...);
   *** parseUHFUpdatingData(...);
   *** parseVersionData(...);
   *** parseWriteData(...);
   *** parserUhfTagBuff_EPC_TID_USER(...);
   *** setCWSendData(...);
   *** setEPCAndTIDModeSendData(...);
   *** setEPCAndTIDUserModeSendData(...);
   *** setEPCModeSendData(...);
   *** setFilterSendData(...);
   *** setFrequencyModeSendData(...);
   *** setGen2SendData(...);
   *** setJumpFrequencySendData(...);
   *** setPowerSendData(...);
   *** setProtocolSendData(...);
   *** setR6WorkmodeSendData(...);
   *** uhfJump2BootSendData(...);
   *** uhfStartUpdateSendData(...);
   *** uhfUpdatingSendData(...);
}

-keep class com.rscja.deviceapi.UHFProtocolParseUSB
-keepclassmembers class com.rscja.deviceapi.UHFProtocolParseUSB {
   <init>(...);
   *** getInstance(...);
}

-keep class com.rscja.deviceapi.VersionInfo
-keepclassmembers class com.rscja.deviceapi.VersionInfo {
   <init>(...);
   *** getVersion(...);
}

-keep class com.rscja.deviceapi.usb.USBUtil$ReceiverData
-keepclassmembers class com.rscja.deviceapi.usb.USBUtil$ReceiverData {
}

-keep class com.rscja.deviceapi.usb.USBUtil$UsbReceiver
-keepclassmembers class com.rscja.deviceapi.usb.USBUtil$UsbReceiver {
   *** onReceive(...);
}

-keep class com.rscja.deviceapi.usb.USBUtil
-keepclassmembers class com.rscja.deviceapi.usb.USBUtil {
   <init>(...);
   *** closeport(...);
   *** getDeviceList(...);
   *** getUsbDevice(...);
   *** init(...);
   *** openPort(...);
   *** receive(...);
   *** send(...);
   *** sendAndReceive(...);
   *** setKeyEventCallback(...);
}

-keep class com.rscja.deviceapi.service.BLEService$IDataCallBack
-keepclassmembers class com.rscja.deviceapi.service.BLEService$IDataCallBack {
}

-keep class com.rscja.deviceapi.service.BLEService
-keepclassmembers class com.rscja.deviceapi.service.BLEService {
   <init>(...);
   *** getBTConnectStatus(...);
   *** getVersion(...);
   *** close(...);
   *** connect(...);
   *** connect(...);
   *** disconnect(...);
   *** enableTXNotification(...);
   *** initialize(...);
   *** readCharacteristic(...);
   *** setBtName(...);
   *** setDataCallBack(...);
   *** setKeyEventCallback(...);
   *** setStatusCallback(...);
   *** startBTScan(...);
   *** stoptBTScan(...);
   *** writeRXCharacteristic(...);
}

-keep class com.rscja.deviceapi.service.BTService$IDataCallBack
-keepclassmembers class com.rscja.deviceapi.service.BTService$IDataCallBack {
}

-keep class com.rscja.deviceapi.service.BTService
-keepclassmembers class com.rscja.deviceapi.service.BTService {
   <init>(...);
   *** getBTConnectStatus(...);
   *** getSupportedGattServices(...);
   *** getVersion(...);
   *** close(...);
   *** connect(...);
   *** disconnect(...);
   *** enableTXNotification(...);
   *** initialize(...);
   *** readCharacteristic(...);
   *** setBtName(...);
   *** setDataCallBack(...);
   *** setKeyEventCallback(...);
   *** setStatusCallback(...);
   *** startBTScan(...);
   *** stoptBTScan(...);
   *** writeRXCharacteristic(...);
}

-keep class com.rscja.deviceapi.interfaces.ConnectionStatus
-keepclassmembers class com.rscja.deviceapi.interfaces.ConnectionStatus {
   *** valueOf(...);
   *** values(...);
}

-keep class com.rscja.deviceapi.interfaces.IBluetoothReader
-keepclassmembers class com.rscja.deviceapi.interfaces.IBluetoothReader {
}

-keep class com.rscja.deviceapi.interfaces.IBluetoothReader
-keepclassmembers class com.rscja.deviceapi.interfaces.IBluetoothReader {
}

-keep class com.rscja.deviceapi.interfaces.IBluetoothReader
-keepclassmembers class com.rscja.deviceapi.interfaces.IBluetoothReader {
}

-keep class com.rscja.deviceapi.interfaces.ConnectionStatusCallback
-keepclassmembers class com.rscja.deviceapi.interfaces.ConnectionStatusCallback {
}

-keep class com.rscja.deviceapi.interfaces.KeyEventCallback
-keepclassmembers class com.rscja.deviceapi.interfaces.KeyEventCallback {
}

-keep class com.rscja.deviceapi.interfaces.ScanBTCallback
-keepclassmembers class com.rscja.deviceapi.interfaces.ScanBTCallback {
}

-keep class com.rscja.deviceapi.interfaces.IUHF
-keepclassmembers class com.rscja.deviceapi.interfaces.IUHF {
}

-keep class com.rscja.deviceapi.interfaces.IUHF
-keepclassmembers class com.rscja.deviceapi.interfaces.IUHF {
}

-keep class com.rscja.deviceapi.interfaces.IUHF
-keepclassmembers class com.rscja.deviceapi.interfaces.IUHF {
}

-keep class com.rscja.deviceapi.interfaces.IUHFProtocolParse
-keepclassmembers class com.rscja.deviceapi.interfaces.IUHFProtocolParse {
}

-keep class com.rscja.deviceapi.interfaces.IUhfReader
-keepclassmembers class com.rscja.deviceapi.interfaces.IUhfReader {
}

-keep class com.rscja.deviceapi.exception.ConfigurationException
-keepclassmembers class com.rscja.deviceapi.exception.ConfigurationException {
   <init>(...);
}

-keep class com.rscja.deviceapi.exception.DeviceNotConnectException
-keepclassmembers class com.rscja.deviceapi.exception.DeviceNotConnectException {
   <init>(...);
}

-keep class com.rscja.deviceapi.exception.FingerprintAlreadyEnrolledException
-keepclassmembers class com.rscja.deviceapi.exception.FingerprintAlreadyEnrolledException {
   <init>(...);
}

-keep class com.rscja.deviceapi.exception.FingerprintInvalidIDException
-keepclassmembers class com.rscja.deviceapi.exception.FingerprintInvalidIDException {
   <init>(...);
}

-keep class com.rscja.deviceapi.exception.PrinterBarcodeInvalidException
-keepclassmembers class com.rscja.deviceapi.exception.PrinterBarcodeInvalidException {
   <init>(...);
}

-keep class com.rscja.deviceapi.exception.PrinterLowPager
-keepclassmembers class com.rscja.deviceapi.exception.PrinterLowPager {
   <init>(...);
}

-keep class com.rscja.deviceapi.exception.PSAMException
-keepclassmembers class com.rscja.deviceapi.exception.PSAMException {
   <init>(...);
}

-keep class com.rscja.deviceapi.exception.RFIDArgumentException
-keepclassmembers class com.rscja.deviceapi.exception.RFIDArgumentException {
   <init>(...);
}

-keep class com.rscja.deviceapi.exception.RFIDNotFoundException
-keepclassmembers class com.rscja.deviceapi.exception.RFIDNotFoundException {
   <init>(...);
}

-keep class com.rscja.deviceapi.exception.RFIDReadFailureException
-keepclassmembers class com.rscja.deviceapi.exception.RFIDReadFailureException {
   <init>(...);
}

-keep class com.rscja.deviceapi.exception.RFIDVerificationException
-keepclassmembers class com.rscja.deviceapi.exception.RFIDVerificationException {
   <init>(...);
}

-keep class com.rscja.deviceapi.entity.AnimalEntity
-keepclassmembers class com.rscja.deviceapi.entity.AnimalEntity {
   <init>(...);
   <init>(...);
   *** getAnimalFlag(...);
   *** setAnimalFlag(...);
   *** getCountryID(...);
   *** setCountryID(...);
   *** getDataBlock(...);
   *** setDataBlock(...);
   *** getIdData(...);
   *** setIdData(...);
   *** getNationalID(...);
   *** setNationalID(...);
   *** getRawData(...);
   *** setRawData(...);
   *** getReserved(...);
   *** setReserved(...);
}

-keep class com.rscja.deviceapi.entity.BDLocation
-keepclassmembers class com.rscja.deviceapi.entity.BDLocation {
   <init>(...);
   *** getAltitude(...);
   *** getLat(...);
   *** getLon(...);
   *** getNavType(...);
}

-keep class com.rscja.deviceapi.entity.DESFireFile
-keepclassmembers class com.rscja.deviceapi.entity.DESFireFile {
   <init>(...);
   *** getData(...);
   *** setData(...);
   *** getEncryptionType(...);
   *** getFileNo(...);
   *** getFileSize(...);
   *** setFileSize(...);
   *** getFileType(...);
   *** getMaxValue(...);
   *** setMaxValue(...);
   *** getMinValue(...);
   *** setMinValue(...);
   *** getReadPermissions(...);
   *** getReadWritePermissions(...);
   *** getUpdatePermissions(...);
   *** getWritePermissions(...);
}

-keep class com.rscja.deviceapi.entity.ISO15693Entity
-keepclassmembers class com.rscja.deviceapi.entity.ISO15693Entity {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAFI(...);
   *** setAFI(...);
   *** getDESFID(...);
   *** setDESFID(...);
   *** getOriginalUID(...);
   *** setOriginalUID(...);
}

-keep class com.rscja.deviceapi.entity.SatelliteEntity
-keepclassmembers class com.rscja.deviceapi.entity.SatelliteEntity {
   <init>(...);
   *** getNumber(...);
   *** setNumber(...);
   *** getSignal(...);
   *** setSignal(...);
}

-keep class com.rscja.deviceapi.entity.SimpleRFIDEntity
-keepclassmembers class com.rscja.deviceapi.entity.SimpleRFIDEntity {
   <init>(...);
   <init>(...);
   *** getData(...);
   *** setData(...);
   *** getId(...);
   *** getType(...);
   *** getIdBytes(...);
}

-keep class com.rscja.deviceapi.entity.UHFTAGInfo
-keepclassmembers class com.rscja.deviceapi.entity.UHFTAGInfo {
   <init>(...);
   *** getAnt(...);
   *** setAnt(...);
   *** getEPC(...);
   *** setEPC(...);
   *** getPc(...);
   *** setPc(...);
   *** getRssi(...);
   *** setRssi(...);
   *** getTid(...);
   *** setTid(...);
   *** getUser(...);
   *** setUser(...);
}

-keep class com.imagealgorithmlab.barcode.AEData
-keepclassmembers class com.imagealgorithmlab.barcode.AEData {
   <init>(...);
   *** getExp(...);
   *** getGain(...);
   *** getIllumAvg(...);
}

-keep class com.imagealgorithmlab.barcode.DetailData
-keepclassmembers class com.imagealgorithmlab.barcode.DetailData {
   <init>(...);
   *** getCode(...);
   *** setCode(...);
   *** getMsg(...);
   *** setMsg(...);
   *** isSuccess(...);
   *** setSuccess(...);
}

-keep class com.imagealgorithmlab.barcode.Result
-keepclassmembers class com.imagealgorithmlab.barcode.Result {
   <init>(...);
   *** getCode(...);
   *** setCode(...);
   *** getData(...);
   *** setData(...);
   *** isEncrypted(...);
   *** setEncrypted(...);
   *** getMessage(...);
   *** setMessage(...);
}

-keep class com.imagealgorithmlab.barcode.SaveMode
-keepclassmembers class com.imagealgorithmlab.barcode.SaveMode {
   *** getVal(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.imagealgorithmlab.barcode.SymbologyData
-keepclassmembers class com.imagealgorithmlab.barcode.SymbologyData {
   <init>(...);
   *** getAllTime(...);
   *** setAllTime(...);
   *** getByteCount(...);
   *** getCode(...);
   *** getData(...);
   *** getDecodeTime(...);
   *** setDecodeTime(...);
   *** getName(...);
   *** getBytes(...);
   *** setmData(...);
}

-keep class com.imagealgorithmlab.barcode.SymbologySettingItem
-keepclassmembers class com.imagealgorithmlab.barcode.SymbologySettingItem {
   <init>(...);
   *** getItemType(...);
   *** getName(...);
   *** getValue(...);
   *** setValue(...);
}

-keep class com.hsm.barcode.DecodeOptions
-keepclassmembers class com.hsm.barcode.DecodeOptions {
   <init>(...);
}

-keep class com.hsm.barcode.Decoder
-keepclassmembers class com.hsm.barcode.Decoder {
   <init>(...);
   *** getAPIRevision(...);
   *** getBarcodeAimID(...);
   *** getBarcodeAimModifier(...);
   *** getBarcodeCodeID(...);
   *** getBarcodeData(...);
   *** getBarcodeLength(...);
   *** getControlLogicRevision(...);
   *** getDecThreadsRevision(...);
   *** getDecodeWindowMode(...);
   *** setDecodeWindowMode(...);
   *** getDecoderRevision(...);
   *** getEngineID(...);
   *** getEngineSerialNumber(...);
   *** getEngineType(...);
   *** getExposureMode(...);
   *** setExposureMode(...);
   *** getImageHeight(...);
   *** getImageWidth(...);
   *** getLastDecodeTime(...);
   *** getLightsMode(...);
   *** setLightsMode(...);
   *** getMaxMessageLength(...);
   *** getOCRMode(...);
   *** setOCRMode(...);
   *** getOCRTemplates(...);
   *** setOCRTemplates(...);
   *** getPSOCMajorRev(...);
   *** getPSOCMinorRev(...);
   *** getScanDriverRevision(...);
   *** getSecondaryDecoderRevision(...);
   *** getShowDecodeWindow(...);
   *** setShowDecodeWindow(...);
   *** callbackKeepGoing(...);
   *** callbackMultiRead(...);
   *** connectDecoderLibrary(...);
   *** disableSymbology(...);
   *** disconnectDecoderLibrary(...);
   *** enableSymbology(...);
   *** getBarcodeByteData(...);
   *** getDecodeOptions(...);
   *** getDecodeWindow(...);
   *** getDecodeWindowLimits(...);
   *** getErrorMessage(...);
   *** getExposureSettings(...);
   *** getIQImage(...);
   *** getImagerProperties(...);
   *** getLastImage(...);
   *** getOCRUserTemplate(...);
   *** getPreviewFrame(...);
   *** getSingleFrame(...);
   *** getSymbologyConfig(...);
   *** getSymbologyConfigDefaults(...);
   *** getSymbologyMaxRange(...);
   *** getSymbologyMinRange(...);
   *** setDecodeAttemptLimit(...);
   *** setDecodeOptions(...);
   *** setDecodeParameter(...);
   *** setDecodeWindow(...);
   *** setDecoderListeners(...);
   *** setExposureSettings(...);
   *** setLastImage(...);
   *** setOCRUserTemplate(...);
   *** setSymbologyConfig(...);
   *** setSymbologyDefaults(...);
   *** startScanning(...);
   *** stopScanning(...);
   *** waitForDecode(...);
   *** waitForDecodeTwo(...);
   *** waitMultipleDecode(...);
}

-keep class com.hsm.barcode.DecoderConfigValues$EngineID
-keepclassmembers class com.hsm.barcode.DecoderConfigValues$EngineID {
}

-keep class com.hsm.barcode.DecoderConfigValues$EngineType
-keepclassmembers class com.hsm.barcode.DecoderConfigValues$EngineType {
}

-keep class com.hsm.barcode.DecoderConfigValues$LightsMode
-keepclassmembers class com.hsm.barcode.DecoderConfigValues$LightsMode {
}

-keep class com.hsm.barcode.DecoderConfigValues$OCRMode
-keepclassmembers class com.hsm.barcode.DecoderConfigValues$OCRMode {
}

-keep class com.hsm.barcode.DecoderConfigValues$OCRTemplate
-keepclassmembers class com.hsm.barcode.DecoderConfigValues$OCRTemplate {
}

-keep class com.hsm.barcode.DecoderConfigValues$SymbologyFlags
-keepclassmembers class com.hsm.barcode.DecoderConfigValues$SymbologyFlags {
}

-keep class com.hsm.barcode.DecoderConfigValues$SymbologyID
-keepclassmembers class com.hsm.barcode.DecoderConfigValues$SymbologyID {
}

-keep class com.hsm.barcode.DecoderConfigValues
-keepclassmembers class com.hsm.barcode.DecoderConfigValues {
}

-keep class com.hsm.barcode.DecodeResult
-keepclassmembers class com.hsm.barcode.DecodeResult {
   <init>(...);
}

-keep class com.hsm.barcode.DecoderException$ResultID
-keepclassmembers class com.hsm.barcode.DecoderException$ResultID {
}

-keep class com.hsm.barcode.DecoderException
-keepclassmembers class com.hsm.barcode.DecoderException {
   <init>(...);
   *** getErrorCode(...);
}

-keep class com.hsm.barcode.DecodeWindowing$DecodeWindow
-keepclassmembers class com.hsm.barcode.DecodeWindowing$DecodeWindow {
   <init>(...);
}

-keep class com.hsm.barcode.DecodeWindowing$DecodeWindowLimits
-keepclassmembers class com.hsm.barcode.DecodeWindowing$DecodeWindowLimits {
   <init>(...);
}

-keep class com.hsm.barcode.DecodeWindowing$DecodeWindowMode
-keepclassmembers class com.hsm.barcode.DecodeWindowing$DecodeWindowMode {
}

-keep class com.hsm.barcode.DecodeWindowing$DecodeWindowShowWindow
-keepclassmembers class com.hsm.barcode.DecodeWindowing$DecodeWindowShowWindow {
}

-keep class com.hsm.barcode.DecodeWindowing
-keepclassmembers class com.hsm.barcode.DecodeWindowing {
   <init>(...);
}

-keep class com.hsm.barcode.ExposureValues$ExposureMethod
-keepclassmembers class com.hsm.barcode.ExposureValues$ExposureMethod {
   <init>(...);
}

-keep class com.hsm.barcode.ExposureValues$ExposureMode
-keepclassmembers class com.hsm.barcode.ExposureValues$ExposureMode {
   <init>(...);
}

-keep class com.hsm.barcode.ExposureValues$ExposureSettings
-keepclassmembers class com.hsm.barcode.ExposureValues$ExposureSettings {
   <init>(...);
}

-keep class com.hsm.barcode.ExposureValues$ExposureSettingsMinMax
-keepclassmembers class com.hsm.barcode.ExposureValues$ExposureSettingsMinMax {
   <init>(...);
}

-keep class com.hsm.barcode.ExposureValues$SpecularExclusion
-keepclassmembers class com.hsm.barcode.ExposureValues$SpecularExclusion {
   <init>(...);
}

-keep class com.hsm.barcode.ExposureValues
-keepclassmembers class com.hsm.barcode.ExposureValues {
}

-keep class com.hsm.barcode.HalInterface
-keepclassmembers class com.hsm.barcode.HalInterface {
   <init>(...);
   *** SetCamera_ID(...);
   *** SetPackageName(...);
}

-keep class com.hsm.barcode.DecoderListener
-keepclassmembers class com.hsm.barcode.DecoderListener {
}

-keep class mono.com.hsm.barcode.DecoderListenerImplementor
-keepclassmembers class mono.com.hsm.barcode.DecoderListenerImplementor {
}

-keep class com.hsm.barcode.ImageAttributes
-keepclassmembers class com.hsm.barcode.ImageAttributes {
   <init>(...);
}

-keep class com.hsm.barcode.ImagerProperties
-keepclassmembers class com.hsm.barcode.ImagerProperties {
   <init>(...);
}

-keep class com.hsm.barcode.IQImagingProperties$IQImageFormat
-keepclassmembers class com.hsm.barcode.IQImagingProperties$IQImageFormat {
}

-keep class com.hsm.barcode.IQImagingProperties
-keepclassmembers class com.hsm.barcode.IQImagingProperties {
   <init>(...);
}

-keep class com.hsm.barcode.SymbologyConfig
-keepclassmembers class com.hsm.barcode.SymbologyConfig {
   <init>(...);
   *** setFlags(...);
   *** setMaxLength(...);
   *** setMinLength(...);
}

-keep class com.custom.Barcode2DSoftHuace$Barcode2DScanCallback
-keepclassmembers class com.custom.Barcode2DSoftHuace$Barcode2DScanCallback {
   *** onScanComplete(...);
}

-keep class com.custom.Barcode2DSoftHuace$Barcode2DScanCallback2
-keepclassmembers class com.custom.Barcode2DSoftHuace$Barcode2DScanCallback2 {
   *** onScanComplete(...);
}

-keep class com.custom.Barcode2DSoftHuace
-keepclassmembers class com.custom.Barcode2DSoftHuace {
   <init>(...);
   *** getInstance(...);
   *** isScaning(...);
   *** startScan(...);
}

-keep class com.custom.BarcodeScanCallback
-keepclassmembers class com.custom.BarcodeScanCallback {
}

-keep class com.custom.RFIDWithUHFUARTUAE
-keepclassmembers class com.custom.RFIDWithUHFUARTUAE {
   <init>(...);
   *** getInstance(...);
   *** setEPCAndTamperAlarmMode(...);
}

-keep class com.barcode.BarcodeUtility$ModuleType
-keepclassmembers class com.barcode.BarcodeUtility$ModuleType {
   *** getValue(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.barcode.BarcodeUtility
-keepclassmembers class com.barcode.BarcodeUtility {
   *** getInstance(...);
   *** close(...);
   *** closeKeyboardHelper(...);
   *** enableContinuousScan(...);
   *** enableEnter(...);
   *** enablePlayFailureSound(...);
   *** enablePlaySuccessSound(...);
   *** enableTAB(...);
   *** enableVibrate(...);
   *** filterCharacter(...);
   *** getKeyboardHelperParam(...);
   *** interceptTrimLeft(...);
   *** interceptTrimRight(...);
   *** logD(...);
   *** open(...);
   *** openKeyboardHelper(...);
   *** setBarcodeEncodingFormat(...);
   *** setContinuousScanIntervalTime(...);
   *** setContinuousScanTimeOut(...);
   *** setOutputMode(...);
   *** setParam_zebra(...);
   *** setPrefix(...);
   *** setReleaseScan(...);
   *** setScanFailureBroadcast(...);
   *** setScanOutTime(...);
   *** setScanResultBroadcast(...);
   *** setSuffix(...);
   *** startScan(...);
   *** stopScan(...);
}

# ACW for Microsoft.AppCenter.Analytics.Android.Bindings
-keep class com.microsoft.appcenter.analytics.AnalyticsTransmissionTarget
-keepclassmembers class com.microsoft.appcenter.analytics.AnalyticsTransmissionTarget {
   *** getPropertyConfigurator(...);
   *** addAuthenticationProvider(...);
   *** getTransmissionTarget(...);
   *** isEnabledAsync(...);
   *** pause(...);
   *** resume(...);
   *** setEnabledAsync(...);
   *** trackEvent(...);
   *** trackEvent(...);
   *** trackEvent(...);
   *** trackEvent(...);
   *** trackEvent(...);
}

-keep class com.microsoft.appcenter.analytics.Analytics
-keepclassmembers class com.microsoft.appcenter.analytics.Analytics {
   *** isAutoPageTrackingEnabled(...);
   *** setAutoPageTrackingEnabled(...);
   *** getGroupName(...);
   *** getInstance(...);
   *** getLoggerTag(...);
   *** getServiceName(...);
   *** getTransmissionTarget(...);
   *** isEnabled(...);
   *** pause(...);
   *** resume(...);
   *** setEnabled(...);
   *** setListener(...);
   *** setTransmissionInterval(...);
   *** trackEvent(...);
   *** trackEvent(...);
   *** trackEvent(...);
   *** trackEvent(...);
   *** trackEvent(...);
   *** trackPage(...);
   *** trackPage(...);
   *** unsetInstance(...);
}

-keep class com.microsoft.appcenter.analytics.AuthenticationProvider$AuthenticationCallback
-keepclassmembers class com.microsoft.appcenter.analytics.AuthenticationProvider$AuthenticationCallback {
}

-keep class com.microsoft.appcenter.analytics.AuthenticationProvider$TokenProvider
-keepclassmembers class com.microsoft.appcenter.analytics.AuthenticationProvider$TokenProvider {
}

-keep class com.microsoft.appcenter.analytics.AuthenticationProvider$Type
-keepclassmembers class com.microsoft.appcenter.analytics.AuthenticationProvider$Type {
   *** valueOf(...);
   *** values(...);
}

-keep class com.microsoft.appcenter.analytics.AuthenticationProvider
-keepclassmembers class com.microsoft.appcenter.analytics.AuthenticationProvider {
   <init>(...);
}

-keep class com.microsoft.appcenter.analytics.BuildConfig
-keepclassmembers class com.microsoft.appcenter.analytics.BuildConfig {
   <init>(...);
}

-keep class com.microsoft.appcenter.analytics.EventProperties
-keepclassmembers class com.microsoft.appcenter.analytics.EventProperties {
   <init>(...);
   *** set(...);
   *** set(...);
   *** set(...);
   *** set(...);
   *** set(...);
}

-keep class com.microsoft.appcenter.analytics.PropertyConfigurator
-keepclassmembers class com.microsoft.appcenter.analytics.PropertyConfigurator {
   *** collectDeviceId(...);
   *** removeEventProperty(...);
   *** setAppLocale(...);
   *** setAppName(...);
   *** setAppVersion(...);
   *** setEventProperty(...);
   *** setEventProperty(...);
   *** setEventProperty(...);
   *** setEventProperty(...);
   *** setEventProperty(...);
   *** setUserId(...);
}

-keep class com.microsoft.appcenter.analytics.ingestion.models.EventLog
-keepclassmembers class com.microsoft.appcenter.analytics.ingestion.models.EventLog {
   <init>(...);
   *** getId(...);
   *** setId(...);
   *** getType(...);
   *** getTypedProperties(...);
   *** setTypedProperties(...);
}

-keep class com.microsoft.appcenter.analytics.ingestion.models.LogWithNameAndProperties
-keepclassmembers class com.microsoft.appcenter.analytics.ingestion.models.LogWithNameAndProperties {
   <init>(...);
   *** getName(...);
   *** setName(...);
}

-keep class com.microsoft.appcenter.analytics.ingestion.models.LogWithNameAndProperties
-keepclassmembers class com.microsoft.appcenter.analytics.ingestion.models.LogWithNameAndProperties {
   *** getType(...);
}

-keep class com.microsoft.appcenter.analytics.ingestion.models.PageLog
-keepclassmembers class com.microsoft.appcenter.analytics.ingestion.models.PageLog {
   <init>(...);
   *** getType(...);
}

-keep class com.microsoft.appcenter.analytics.ingestion.models.StartSessionLog
-keepclassmembers class com.microsoft.appcenter.analytics.ingestion.models.StartSessionLog {
   <init>(...);
   *** getType(...);
}

-keep class com.microsoft.appcenter.analytics.ingestion.models.one.CommonSchemaEventLog
-keepclassmembers class com.microsoft.appcenter.analytics.ingestion.models.one.CommonSchemaEventLog {
   <init>(...);
   *** getType(...);
}

-keep class com.microsoft.appcenter.analytics.channel.AnalyticsValidator
-keepclassmembers class com.microsoft.appcenter.analytics.channel.AnalyticsValidator {
   <init>(...);
}

-keep class com.microsoft.appcenter.analytics.channel.AnalyticsListener
-keepclassmembers class com.microsoft.appcenter.analytics.channel.AnalyticsListener {
}

-keep class mono.com.microsoft.appcenter.analytics.channel.AnalyticsListenerImplementor
-keepclassmembers class mono.com.microsoft.appcenter.analytics.channel.AnalyticsListenerImplementor {
}

-keep class com.microsoft.appcenter.analytics.channel.SessionTracker
-keepclassmembers class com.microsoft.appcenter.analytics.channel.SessionTracker {
   <init>(...);
   *** clearSessions(...);
   *** onActivityPaused(...);
   *** onActivityResumed(...);
}

# ACW for Microsoft.AppCenter.Analytics
# ACW for Microsoft.AppCenter.Android.Bindings
-keep class com.microsoft.appcenter.AbstractAppCenterService
-keepclassmembers class com.microsoft.appcenter.AbstractAppCenterService {
   <init>(...);
   *** getChannelListener(...);
   *** getEnabledPreferenceKey(...);
   *** getGroupName(...);
   *** isInstanceEnabled(...);
   *** setInstanceEnabled(...);
   *** isAppSecretRequired(...);
   *** getLogFactories(...);
   *** getLoggerTag(...);
   *** getTriggerCount(...);
   *** getTriggerInterval(...);
   *** getTriggerMaxParallelRequests(...);
   *** applyEnabledState(...);
   *** isInstanceEnabledAsync(...);
   *** onActivityCreated(...);
   *** onActivityDestroyed(...);
   *** onActivityPaused(...);
   *** onActivityResumed(...);
   *** onActivitySaveInstanceState(...);
   *** onActivityStarted(...);
   *** onActivityStopped(...);
   *** onApplicationEnterBackground(...);
   *** onApplicationEnterForeground(...);
   *** onConfigurationUpdated(...);
   *** onStarted(...);
   *** onStarting(...);
   *** post(...);
   *** post(...);
   *** postAsyncGetter(...);
   *** postOnUiThread(...);
   *** setInstanceEnabledAsync(...);
   *** getServiceName(...);
}

-keep class com.microsoft.appcenter.AbstractAppCenterService
-keepclassmembers class com.microsoft.appcenter.AbstractAppCenterService {
   *** getGroupName(...);
   *** getLoggerTag(...);
   *** getServiceName(...);
}

-keep class com.microsoft.appcenter.AppCenter
-keepclassmembers class com.microsoft.appcenter.AppCenter {
   <init>(...);
   *** getInstallId(...);
   *** getInstance(...);
   *** isConfigured(...);
   *** isRunningInAppCenterTestCloud(...);
   *** getLogLevel(...);
   *** setLogLevel(...);
   *** getSdkVersion(...);
   *** configure(...);
   *** configure(...);
   *** isEnabled(...);
   *** setChannel(...);
   *** setCustomProperties(...);
   *** setEnabled(...);
   *** setLogUrl(...);
   *** setMaxStorageSize(...);
   *** setUserId(...);
   *** setWrapperSdk(...);
   *** start(...);
   *** start(...);
   *** start(...);
   *** startFromLibrary(...);
   *** unsetInstance(...);
}

-keep class com.microsoft.appcenter.CustomProperties
-keepclassmembers class com.microsoft.appcenter.CustomProperties {
   <init>(...);
   *** clear(...);
   *** set(...);
   *** set(...);
   *** set(...);
   *** set(...);
}

-keep class com.microsoft.appcenter.DependencyConfiguration
-keepclassmembers class com.microsoft.appcenter.DependencyConfiguration {
   *** getHttpClient(...);
   *** setHttpClient(...);
}

-keep class com.microsoft.appcenter.BuildConfig
-keepclassmembers class com.microsoft.appcenter.BuildConfig {
   <init>(...);
}

-keep class com.microsoft.appcenter.CancellationException
-keepclassmembers class com.microsoft.appcenter.CancellationException {
   <init>(...);
}

-keep class com.microsoft.appcenter.Constants
-keepclassmembers class com.microsoft.appcenter.Constants {
   <init>(...);
   *** loadFromContext(...);
}

-keep class com.microsoft.appcenter.Flags
-keepclassmembers class com.microsoft.appcenter.Flags {
   <init>(...);
   *** getPersistenceFlag(...);
}

-keep class com.microsoft.appcenter.AppCenterHandler
-keepclassmembers class com.microsoft.appcenter.AppCenterHandler {
}

-keep class com.microsoft.appcenter.AppCenterService
-keepclassmembers class com.microsoft.appcenter.AppCenterService {
}

-keep class com.microsoft.appcenter.utils.AppCenterLog
-keepclassmembers class com.microsoft.appcenter.utils.AppCenterLog {
   <init>(...);
   *** getLogLevel(...);
   *** setLogLevel(...);
   *** debug(...);
   *** debug(...);
   *** error(...);
   *** error(...);
   *** info(...);
   *** info(...);
   *** logAssert(...);
   *** logAssert(...);
   *** verbose(...);
   *** verbose(...);
   *** warn(...);
   *** warn(...);
}

-keep class com.microsoft.appcenter.utils.AppNameHelper
-keepclassmembers class com.microsoft.appcenter.utils.AppNameHelper {
   <init>(...);
   *** getAppName(...);
}

-keep class com.microsoft.appcenter.utils.ApplicationLifecycleListener$ApplicationLifecycleCallbacks
-keepclassmembers class com.microsoft.appcenter.utils.ApplicationLifecycleListener$ApplicationLifecycleCallbacks {
}

-keep class com.microsoft.appcenter.utils.ApplicationLifecycleListener
-keepclassmembers class com.microsoft.appcenter.utils.ApplicationLifecycleListener {
   <init>(...);
   *** onActivityCreated(...);
   *** onActivityDestroyed(...);
   *** onActivityPaused(...);
   *** onActivityResumed(...);
   *** onActivitySaveInstanceState(...);
   *** onActivityStarted(...);
   *** onActivityStopped(...);
   *** registerApplicationLifecycleCallbacks(...);
}

-keep class com.microsoft.appcenter.utils.AsyncTaskUtils
-keepclassmembers class com.microsoft.appcenter.utils.AsyncTaskUtils {
   *** execute(...);
}

-keep class com.microsoft.appcenter.utils.DeviceInfoHelper$DeviceInfoException
-keepclassmembers class com.microsoft.appcenter.utils.DeviceInfoHelper$DeviceInfoException {
   <init>(...);
}

-keep class com.microsoft.appcenter.utils.DeviceInfoHelper
-keepclassmembers class com.microsoft.appcenter.utils.DeviceInfoHelper {
   <init>(...);
   *** getDeviceInfo(...);
   *** getVersionCode(...);
   *** setWrapperSdk(...);
}

-keep class com.microsoft.appcenter.utils.HandlerUtils
-keepclassmembers class com.microsoft.appcenter.utils.HandlerUtils {
   <init>(...);
   *** getMainHandler(...);
   *** runOnUiThread(...);
}

-keep class com.microsoft.appcenter.utils.HashUtils
-keepclassmembers class com.microsoft.appcenter.utils.HashUtils {
   *** sha256(...);
}

-keep class com.microsoft.appcenter.utils.IdHelper
-keepclassmembers class com.microsoft.appcenter.utils.IdHelper {
   <init>(...);
   *** getInstallId(...);
}

-keep class com.microsoft.appcenter.utils.InstrumentationRegistryHelper
-keepclassmembers class com.microsoft.appcenter.utils.InstrumentationRegistryHelper {
   <init>(...);
   *** getArguments(...);
}

-keep class com.microsoft.appcenter.utils.NetworkStateHelper$Listener
-keepclassmembers class com.microsoft.appcenter.utils.NetworkStateHelper$Listener {
}

-keep class mono.com.microsoft.appcenter.utils.NetworkStateHelper_ListenerImplementor
-keepclassmembers class mono.com.microsoft.appcenter.utils.NetworkStateHelper_ListenerImplementor {
}

-keep class com.microsoft.appcenter.utils.NetworkStateHelper
-keepclassmembers class com.microsoft.appcenter.utils.NetworkStateHelper {
   <init>(...);
   *** isNetworkConnected(...);
   *** addListener(...);
   *** close(...);
   *** getSharedInstance(...);
   *** removeListener(...);
   *** reopen(...);
   *** unsetInstance(...);
}

-keep class com.microsoft.appcenter.utils.PrefStorageConstants
-keepclassmembers class com.microsoft.appcenter.utils.PrefStorageConstants {
   <init>(...);
}

-keep class com.microsoft.appcenter.utils.ShutdownHelper
-keepclassmembers class com.microsoft.appcenter.utils.ShutdownHelper {
   *** shutdown(...);
}

-keep class com.microsoft.appcenter.utils.TicketCache
-keepclassmembers class com.microsoft.appcenter.utils.TicketCache {
   <init>(...);
   *** clear(...);
   *** getTicket(...);
   *** putTicket(...);
}

-keep class com.microsoft.appcenter.utils.crypto.CryptoUtils$CryptoHandlerEntry
-keepclassmembers class com.microsoft.appcenter.utils.crypto.CryptoUtils$CryptoHandlerEntry {
}

-keep class com.microsoft.appcenter.utils.crypto.CryptoUtils$DecryptedData
-keepclassmembers class com.microsoft.appcenter.utils.crypto.CryptoUtils$DecryptedData {
   <init>(...);
   *** getNewEncryptedData(...);
   *** getDecryptedData(...);
}

-keep class com.microsoft.appcenter.utils.crypto.CryptoUtils$ICipher
-keepclassmembers class com.microsoft.appcenter.utils.crypto.CryptoUtils$ICipher {
}

-keep class com.microsoft.appcenter.utils.crypto.CryptoUtils$ICryptoFactory
-keepclassmembers class com.microsoft.appcenter.utils.crypto.CryptoUtils$ICryptoFactory {
}

-keep class com.microsoft.appcenter.utils.crypto.CryptoUtils$IKeyGenerator
-keepclassmembers class com.microsoft.appcenter.utils.crypto.CryptoUtils$IKeyGenerator {
}

-keep class com.microsoft.appcenter.utils.crypto.CryptoUtils
-keepclassmembers class com.microsoft.appcenter.utils.crypto.CryptoUtils {
   *** decrypt(...);
   *** encrypt(...);
   *** getInstance(...);
}

-keep class com.microsoft.appcenter.utils.context.SessionContext$SessionInfo
-keepclassmembers class com.microsoft.appcenter.utils.context.SessionContext$SessionInfo {
   *** getAppLaunchTimestamp(...);
   *** getSessionId(...);
}

-keep class com.microsoft.appcenter.utils.context.SessionContext
-keepclassmembers class com.microsoft.appcenter.utils.context.SessionContext {
   *** getInstance(...);
   *** addSession(...);
   *** clearSessions(...);
   *** getSessionAt(...);
   *** unsetInstance(...);
}

-keep class com.microsoft.appcenter.utils.context.UserIdContext$Listener
-keepclassmembers class com.microsoft.appcenter.utils.context.UserIdContext$Listener {
}

-keep class mono.com.microsoft.appcenter.utils.context.UserIdContext_ListenerImplementor
-keepclassmembers class mono.com.microsoft.appcenter.utils.context.UserIdContext_ListenerImplementor {
}

-keep class com.microsoft.appcenter.utils.context.UserIdContext
-keepclassmembers class com.microsoft.appcenter.utils.context.UserIdContext {
   <init>(...);
   *** getInstance(...);
   *** getUserId(...);
   *** setUserId(...);
   *** addListener(...);
   *** checkUserIdValidForAppCenter(...);
   *** checkUserIdValidForOneCollector(...);
   *** getPrefixedUserId(...);
   *** removeListener(...);
   *** unsetInstance(...);
}

-keep class com.microsoft.appcenter.utils.async.DefaultAppCenterFuture
-keepclassmembers class com.microsoft.appcenter.utils.async.DefaultAppCenterFuture {
   <init>(...);
   *** isDone(...);
   *** complete(...);
   *** get(...);
   *** thenAccept(...);
}

-keep class com.microsoft.appcenter.utils.async.AppCenterConsumer
-keepclassmembers class com.microsoft.appcenter.utils.async.AppCenterConsumer {
}

-keep class com.microsoft.appcenter.utils.async.AppCenterFuture
-keepclassmembers class com.microsoft.appcenter.utils.async.AppCenterFuture {
}

-keep class com.microsoft.appcenter.ingestion.AppCenterIngestion
-keepclassmembers class com.microsoft.appcenter.ingestion.AppCenterIngestion {
   <init>(...);
   *** close(...);
   *** reopen(...);
   *** sendAsync(...);
   *** setLogUrl(...);
}

-keep class com.microsoft.appcenter.ingestion.Ingestion
-keepclassmembers class com.microsoft.appcenter.ingestion.Ingestion {
}

-keep class com.microsoft.appcenter.ingestion.OneCollectorIngestion
-keepclassmembers class com.microsoft.appcenter.ingestion.OneCollectorIngestion {
   <init>(...);
   *** close(...);
   *** reopen(...);
   *** sendAsync(...);
   *** setLogUrl(...);
}

-keep class com.microsoft.appcenter.ingestion.models.AbstractLog
-keepclassmembers class com.microsoft.appcenter.ingestion.models.AbstractLog {
   <init>(...);
   *** getDevice(...);
   *** setDevice(...);
   *** getDistributionGroupId(...);
   *** setDistributionGroupId(...);
   *** getSid(...);
   *** setSid(...);
   *** getTag(...);
   *** setTag(...);
   *** getTimestamp(...);
   *** setTimestamp(...);
   *** getTransmissionTargetTokens(...);
   *** getUserId(...);
   *** setUserId(...);
   *** addTransmissionTarget(...);
   *** read(...);
   *** write(...);
   *** getType(...);
}

-keep class com.microsoft.appcenter.ingestion.models.AbstractLog
-keepclassmembers class com.microsoft.appcenter.ingestion.models.AbstractLog {
   *** getType(...);
}

-keep class com.microsoft.appcenter.ingestion.models.CommonProperties
-keepclassmembers class com.microsoft.appcenter.ingestion.models.CommonProperties {
}

-keep class com.microsoft.appcenter.ingestion.models.CustomPropertiesLog
-keepclassmembers class com.microsoft.appcenter.ingestion.models.CustomPropertiesLog {
   <init>(...);
   *** getProperties(...);
   *** setProperties(...);
   *** getType(...);
}

-keep class com.microsoft.appcenter.ingestion.models.Device
-keepclassmembers class com.microsoft.appcenter.ingestion.models.Device {
   <init>(...);
   *** getAppBuild(...);
   *** setAppBuild(...);
   *** getAppNamespace(...);
   *** setAppNamespace(...);
   *** getAppVersion(...);
   *** setAppVersion(...);
   *** getCarrierCountry(...);
   *** setCarrierCountry(...);
   *** getCarrierName(...);
   *** setCarrierName(...);
   *** getLocale(...);
   *** setLocale(...);
   *** getModel(...);
   *** setModel(...);
   *** getOemName(...);
   *** setOemName(...);
   *** getOsApiLevel(...);
   *** setOsApiLevel(...);
   *** getOsBuild(...);
   *** setOsBuild(...);
   *** getOsName(...);
   *** setOsName(...);
   *** getOsVersion(...);
   *** setOsVersion(...);
   *** getScreenSize(...);
   *** setScreenSize(...);
   *** getSdkName(...);
   *** setSdkName(...);
   *** getSdkVersion(...);
   *** setSdkVersion(...);
   *** getTimeZoneOffset(...);
   *** setTimeZoneOffset(...);
}

-keep class com.microsoft.appcenter.ingestion.models.Log
-keepclassmembers class com.microsoft.appcenter.ingestion.models.Log {
}

-keep class com.microsoft.appcenter.ingestion.models.Model
-keepclassmembers class com.microsoft.appcenter.ingestion.models.Model {
}

-keep class com.microsoft.appcenter.ingestion.models.LogContainer
-keepclassmembers class com.microsoft.appcenter.ingestion.models.LogContainer {
   <init>(...);
   *** getLogs(...);
   *** setLogs(...);
}

-keep class com.microsoft.appcenter.ingestion.models.LogWithProperties
-keepclassmembers class com.microsoft.appcenter.ingestion.models.LogWithProperties {
   <init>(...);
   *** getProperties(...);
   *** setProperties(...);
}

-keep class com.microsoft.appcenter.ingestion.models.LogWithProperties
-keepclassmembers class com.microsoft.appcenter.ingestion.models.LogWithProperties {
   *** getType(...);
}

-keep class com.microsoft.appcenter.ingestion.models.StartServiceLog
-keepclassmembers class com.microsoft.appcenter.ingestion.models.StartServiceLog {
   <init>(...);
   *** getServices(...);
   *** setServices(...);
   *** getType(...);
}

-keep class com.microsoft.appcenter.ingestion.models.WrapperSdk
-keepclassmembers class com.microsoft.appcenter.ingestion.models.WrapperSdk {
   <init>(...);
   *** getLiveUpdateDeploymentKey(...);
   *** setLiveUpdateDeploymentKey(...);
   *** getLiveUpdatePackageHash(...);
   *** setLiveUpdatePackageHash(...);
   *** getLiveUpdateReleaseLabel(...);
   *** setLiveUpdateReleaseLabel(...);
   *** getWrapperRuntimeVersion(...);
   *** setWrapperRuntimeVersion(...);
   *** getWrapperSdkName(...);
   *** setWrapperSdkName(...);
   *** getWrapperSdkVersion(...);
   *** setWrapperSdkVersion(...);
   *** read(...);
   *** write(...);
}

-keep class com.microsoft.appcenter.ingestion.models.properties.BooleanTypedProperty
-keepclassmembers class com.microsoft.appcenter.ingestion.models.properties.BooleanTypedProperty {
   <init>(...);
   *** getType(...);
   *** getValue(...);
   *** setValue(...);
}

-keep class com.microsoft.appcenter.ingestion.models.properties.DateTimeTypedProperty
-keepclassmembers class com.microsoft.appcenter.ingestion.models.properties.DateTimeTypedProperty {
   <init>(...);
   *** getType(...);
   *** getValue(...);
   *** setValue(...);
}

-keep class com.microsoft.appcenter.ingestion.models.properties.DoubleTypedProperty
-keepclassmembers class com.microsoft.appcenter.ingestion.models.properties.DoubleTypedProperty {
   <init>(...);
   *** getType(...);
   *** getValue(...);
   *** setValue(...);
}

-keep class com.microsoft.appcenter.ingestion.models.properties.LongTypedProperty
-keepclassmembers class com.microsoft.appcenter.ingestion.models.properties.LongTypedProperty {
   <init>(...);
   *** getType(...);
   *** getValue(...);
   *** setValue(...);
}

-keep class com.microsoft.appcenter.ingestion.models.properties.StringTypedProperty
-keepclassmembers class com.microsoft.appcenter.ingestion.models.properties.StringTypedProperty {
   <init>(...);
   *** getType(...);
   *** getValue(...);
   *** setValue(...);
}

-keep class com.microsoft.appcenter.ingestion.models.properties.TypedProperty
-keepclassmembers class com.microsoft.appcenter.ingestion.models.properties.TypedProperty {
   <init>(...);
   *** getName(...);
   *** setName(...);
   *** getType(...);
   *** read(...);
   *** write(...);
}

-keep class com.microsoft.appcenter.ingestion.models.properties.TypedProperty
-keepclassmembers class com.microsoft.appcenter.ingestion.models.properties.TypedProperty {
   *** getType(...);
}

-keep class com.microsoft.appcenter.ingestion.models.properties.TypedPropertyUtils
-keepclassmembers class com.microsoft.appcenter.ingestion.models.properties.TypedPropertyUtils {
   <init>(...);
   *** create(...);
   *** read(...);
}

-keep class com.microsoft.appcenter.ingestion.models.one.AppExtension
-keepclassmembers class com.microsoft.appcenter.ingestion.models.one.AppExtension {
   <init>(...);
   *** getId(...);
   *** setId(...);
   *** getLocale(...);
   *** setLocale(...);
   *** getName(...);
   *** setName(...);
   *** getUserId(...);
   *** setUserId(...);
   *** getVer(...);
   *** setVer(...);
   *** read(...);
   *** write(...);
}

-keep class com.microsoft.appcenter.ingestion.models.one.CommonSchemaDataUtils
-keepclassmembers class com.microsoft.appcenter.ingestion.models.one.CommonSchemaDataUtils {
   <init>(...);
   *** addCommonSchemaData(...);
}

-keep class com.microsoft.appcenter.ingestion.models.one.CommonSchemaLog
-keepclassmembers class com.microsoft.appcenter.ingestion.models.one.CommonSchemaLog {
   <init>(...);
   *** getCV(...);
   *** setCV(...);
   *** getData(...);
   *** setData(...);
   *** getExt(...);
   *** setExt(...);
   *** getFlags(...);
   *** setFlags(...);
   *** getIKey(...);
   *** setIKey(...);
   *** getName(...);
   *** setName(...);
   *** getPopSample(...);
   *** setPopSample(...);
   *** getVer(...);
   *** setVer(...);
}

-keep class com.microsoft.appcenter.ingestion.models.one.CommonSchemaLog
-keepclassmembers class com.microsoft.appcenter.ingestion.models.one.CommonSchemaLog {
   *** getType(...);
}

-keep class com.microsoft.appcenter.ingestion.models.one.Data
-keepclassmembers class com.microsoft.appcenter.ingestion.models.one.Data {
   <init>(...);
   *** getProperties(...);
   *** read(...);
   *** write(...);
}

-keep class com.microsoft.appcenter.ingestion.models.one.DeviceExtension
-keepclassmembers class com.microsoft.appcenter.ingestion.models.one.DeviceExtension {
   <init>(...);
   *** getLocalId(...);
   *** setLocalId(...);
   *** read(...);
   *** write(...);
}

-keep class com.microsoft.appcenter.ingestion.models.one.Extensions
-keepclassmembers class com.microsoft.appcenter.ingestion.models.one.Extensions {
   <init>(...);
   *** getApp(...);
   *** setApp(...);
   *** getDevice(...);
   *** setDevice(...);
   *** getLoc(...);
   *** setLoc(...);
   *** getMetadata(...);
   *** setMetadata(...);
   *** getNet(...);
   *** setNet(...);
   *** getOs(...);
   *** setOs(...);
   *** getProtocol(...);
   *** setProtocol(...);
   *** getSdk(...);
   *** setSdk(...);
   *** getUser(...);
   *** setUser(...);
   *** read(...);
   *** write(...);
}

-keep class com.microsoft.appcenter.ingestion.models.one.LocExtension
-keepclassmembers class com.microsoft.appcenter.ingestion.models.one.LocExtension {
   <init>(...);
   *** getTz(...);
   *** setTz(...);
   *** read(...);
   *** write(...);
}

-keep class com.microsoft.appcenter.ingestion.models.one.MetadataExtension
-keepclassmembers class com.microsoft.appcenter.ingestion.models.one.MetadataExtension {
   <init>(...);
   *** getMetadata(...);
   *** read(...);
   *** write(...);
}

-keep class com.microsoft.appcenter.ingestion.models.one.NetExtension
-keepclassmembers class com.microsoft.appcenter.ingestion.models.one.NetExtension {
   <init>(...);
   *** getProvider(...);
   *** setProvider(...);
   *** read(...);
   *** write(...);
}

-keep class com.microsoft.appcenter.ingestion.models.one.OsExtension
-keepclassmembers class com.microsoft.appcenter.ingestion.models.one.OsExtension {
   <init>(...);
   *** getName(...);
   *** setName(...);
   *** getVer(...);
   *** setVer(...);
   *** read(...);
   *** write(...);
}

-keep class com.microsoft.appcenter.ingestion.models.one.PartAUtils
-keepclassmembers class com.microsoft.appcenter.ingestion.models.one.PartAUtils {
   <init>(...);
   *** addPartAFromLog(...);
   *** getTargetKey(...);
   *** setName(...);
}

-keep class com.microsoft.appcenter.ingestion.models.one.ProtocolExtension
-keepclassmembers class com.microsoft.appcenter.ingestion.models.one.ProtocolExtension {
   <init>(...);
   *** getDevMake(...);
   *** setDevMake(...);
   *** getDevModel(...);
   *** setDevModel(...);
   *** getTicketKeys(...);
   *** setTicketKeys(...);
   *** read(...);
   *** write(...);
}

-keep class com.microsoft.appcenter.ingestion.models.one.SdkExtension
-keepclassmembers class com.microsoft.appcenter.ingestion.models.one.SdkExtension {
   <init>(...);
   *** getEpoch(...);
   *** setEpoch(...);
   *** getInstallId(...);
   *** setInstallId(...);
   *** getLibVer(...);
   *** setLibVer(...);
   *** getSeq(...);
   *** setSeq(...);
   *** read(...);
   *** write(...);
}

-keep class com.microsoft.appcenter.ingestion.models.one.UserExtension
-keepclassmembers class com.microsoft.appcenter.ingestion.models.one.UserExtension {
   <init>(...);
   *** getLocalId(...);
   *** setLocalId(...);
   *** getLocale(...);
   *** setLocale(...);
   *** read(...);
   *** write(...);
}

-keep class com.microsoft.appcenter.ingestion.models.json.AbstractLogFactory
-keepclassmembers class com.microsoft.appcenter.ingestion.models.json.AbstractLogFactory {
   <init>(...);
   *** toCommonSchemaLogs(...);
   *** create(...);
}

-keep class com.microsoft.appcenter.ingestion.models.json.AbstractLogFactory
-keepclassmembers class com.microsoft.appcenter.ingestion.models.json.AbstractLogFactory {
   *** create(...);
}

-keep class com.microsoft.appcenter.ingestion.models.json.CustomPropertiesLogFactory
-keepclassmembers class com.microsoft.appcenter.ingestion.models.json.CustomPropertiesLogFactory {
   <init>(...);
   *** create(...);
}

-keep class com.microsoft.appcenter.ingestion.models.json.DefaultLogSerializer
-keepclassmembers class com.microsoft.appcenter.ingestion.models.json.DefaultLogSerializer {
   <init>(...);
   *** addLogFactory(...);
   *** deserializeContainer(...);
   *** deserializeLog(...);
   *** serializeContainer(...);
   *** serializeLog(...);
   *** toCommonSchemaLog(...);
}

-keep class com.microsoft.appcenter.ingestion.models.json.LogFactory
-keepclassmembers class com.microsoft.appcenter.ingestion.models.json.LogFactory {
}

-keep class com.microsoft.appcenter.ingestion.models.json.LogSerializer
-keepclassmembers class com.microsoft.appcenter.ingestion.models.json.LogSerializer {
}

-keep class com.microsoft.appcenter.ingestion.models.json.ModelFactory
-keepclassmembers class com.microsoft.appcenter.ingestion.models.json.ModelFactory {
}

-keep class com.microsoft.appcenter.ingestion.models.json.JSONDateUtils
-keepclassmembers class com.microsoft.appcenter.ingestion.models.json.JSONDateUtils {
   <init>(...);
   *** toDate(...);
   *** toString(...);
}

-keep class com.microsoft.appcenter.ingestion.models.json.JSONUtils
-keepclassmembers class com.microsoft.appcenter.ingestion.models.json.JSONUtils {
   *** readArray(...);
   *** readBoolean(...);
   *** readInteger(...);
   *** readLong(...);
   *** readMap(...);
   *** readStringArray(...);
   *** write(...);
   *** writeArray(...);
   *** writeMap(...);
   *** writeStringArray(...);
}

-keep class com.microsoft.appcenter.ingestion.models.json.StartServiceLogFactory
-keepclassmembers class com.microsoft.appcenter.ingestion.models.json.StartServiceLogFactory {
   <init>(...);
   *** create(...);
}

-keep class com.microsoft.appcenter.http.HttpException
-keepclassmembers class com.microsoft.appcenter.http.HttpException {
   <init>(...);
   *** getHttpResponse(...);
   *** equals(...);
   *** hashCode(...);
}

-keep class com.microsoft.appcenter.http.HttpResponse
-keepclassmembers class com.microsoft.appcenter.http.HttpResponse {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getHeaders(...);
   *** getPayload(...);
   *** getStatusCode(...);
}

-keep class com.microsoft.appcenter.http.HttpClient$CallTemplate
-keepclassmembers class com.microsoft.appcenter.http.HttpClient$CallTemplate {
}

-keep class com.microsoft.appcenter.http.HttpClient
-keepclassmembers class com.microsoft.appcenter.http.HttpClient {
}

-keep class com.microsoft.appcenter.http.ServiceCall
-keepclassmembers class com.microsoft.appcenter.http.ServiceCall {
}

-keep class com.microsoft.appcenter.http.ServiceCallback
-keepclassmembers class com.microsoft.appcenter.http.ServiceCallback {
}

-keep class com.microsoft.appcenter.channel.AbstractChannelListener
-keepclassmembers class com.microsoft.appcenter.channel.AbstractChannelListener {
   <init>(...);
   *** onClear(...);
   *** onGloballyEnabled(...);
   *** onGroupAdded(...);
   *** onGroupRemoved(...);
   *** onPaused(...);
   *** onPreparedLog(...);
   *** onPreparingLog(...);
   *** onResumed(...);
   *** shouldFilter(...);
}

-keep class com.microsoft.appcenter.channel.Channel$GroupListener
-keepclassmembers class com.microsoft.appcenter.channel.Channel$GroupListener {
}

-keep class mono.com.microsoft.appcenter.channel.Channel_GroupListenerImplementor
-keepclassmembers class mono.com.microsoft.appcenter.channel.Channel_GroupListenerImplementor {
}

-keep class com.microsoft.appcenter.channel.Channel$Listener
-keepclassmembers class com.microsoft.appcenter.channel.Channel$Listener {
}

-keep class mono.com.microsoft.appcenter.channel.Channel_ListenerImplementor
-keepclassmembers class mono.com.microsoft.appcenter.channel.Channel_ListenerImplementor {
}

-keep class com.microsoft.appcenter.channel.Channel
-keepclassmembers class com.microsoft.appcenter.channel.Channel {
}

-keep class com.microsoft.appcenter.channel.OneCollectorChannelListener
-keepclassmembers class com.microsoft.appcenter.channel.OneCollectorChannelListener {
   <init>(...);
   *** setLogUrl(...);
}

# ACW for Microsoft.AppCenter.Crashes.Android.Bindings
-keep class com.microsoft.appcenter.crashes.AbstractCrashesListener
-keepclassmembers class com.microsoft.appcenter.crashes.AbstractCrashesListener {
   <init>(...);
   *** getErrorAttachments(...);
   *** onBeforeSending(...);
   *** onSendingFailed(...);
   *** onSendingSucceeded(...);
   *** shouldAwaitUserConfirmation(...);
   *** shouldProcess(...);
}

-keep class com.microsoft.appcenter.crashes.AbstractCrashesListener
-keepclassmembers class com.microsoft.appcenter.crashes.AbstractCrashesListener {
}

-keep class com.microsoft.appcenter.crashes.Crashes
-keepclassmembers class com.microsoft.appcenter.crashes.Crashes {
   *** getGroupName(...);
   *** getInstance(...);
   *** getLastSessionCrashReport(...);
   *** getLoggerTag(...);
   *** getMinidumpDirectory(...);
   *** getServiceName(...);
   *** generateTestCrash(...);
   *** hasCrashedInLastSession(...);
   *** hasReceivedMemoryWarningInLastSession(...);
   *** isEnabled(...);
   *** notifyUserConfirmation(...);
   *** saveUncaughtException(...);
   *** setEnabled(...);
   *** setListener(...);
   *** trackError(...);
   *** trackError(...);
   *** unsetInstance(...);
}

-keep class com.microsoft.appcenter.crashes.BuildConfig
-keepclassmembers class com.microsoft.appcenter.crashes.BuildConfig {
   <init>(...);
}

-keep class com.microsoft.appcenter.crashes.CrashesListener
-keepclassmembers class com.microsoft.appcenter.crashes.CrashesListener {
}

-keep class mono.com.microsoft.appcenter.crashes.CrashesListenerImplementor
-keepclassmembers class mono.com.microsoft.appcenter.crashes.CrashesListenerImplementor {
}

-keep class com.microsoft.appcenter.crashes.WrapperSdkExceptionManager
-keepclassmembers class com.microsoft.appcenter.crashes.WrapperSdkExceptionManager {
   *** getUnprocessedErrorReports(...);
   *** buildHandledErrorReport(...);
   *** deleteWrapperExceptionData(...);
   *** loadWrapperExceptionData(...);
   *** saveWrapperException(...);
   *** sendCrashReportsOrAwaitUserConfirmation(...);
   *** sendErrorAttachments(...);
   *** setAutomaticProcessing(...);
   *** trackException(...);
}

-keep class com.microsoft.appcenter.crashes.utils.ErrorLogHelper
-keepclassmembers class com.microsoft.appcenter.crashes.utils.ErrorLogHelper {
   <init>(...);
   *** getErrorStorageDirectory(...);
   *** getLastErrorLogFile(...);
   *** getNewMinidumpDirectory(...);
   *** getNewMinidumpSubfolder(...);
   *** getPendingMinidumpDirectory(...);
   *** cleanPendingMinidumps(...);
   *** clearStaticState(...);
   *** createErrorLog(...);
   *** createErrorLog(...);
   *** getErrorReportFromErrorLog(...);
   *** getModelExceptionFromThrowable(...);
   *** getNewMinidumpFiles(...);
   *** getNewMinidumpSubfolderWithContextData(...);
   *** getStoredDeviceInfo(...);
   *** getStoredErrorLogFiles(...);
   *** getStoredThrowableFile(...);
   *** parseLogFolderUuid(...);
   *** removeLostThrowableFiles(...);
   *** removeMinidumpFolder(...);
   *** removeStaleMinidumpSubfolders(...);
   *** removeStoredErrorLogFile(...);
   *** removeStoredThrowableFile(...);
   *** validateProperties(...);
}

-keep class com.microsoft.appcenter.crashes.model.ErrorReport
-keepclassmembers class com.microsoft.appcenter.crashes.model.ErrorReport {
   <init>(...);
   *** getAppErrorTime(...);
   *** setAppErrorTime(...);
   *** getAppStartTime(...);
   *** setAppStartTime(...);
   *** getDevice(...);
   *** setDevice(...);
   *** getId(...);
   *** setId(...);
   *** getStackTrace(...);
   *** setStackTrace(...);
   *** getThreadName(...);
   *** setThreadName(...);
   *** getThrowable(...);
}

-keep class com.microsoft.appcenter.crashes.model.TestCrashException
-keepclassmembers class com.microsoft.appcenter.crashes.model.TestCrashException {
   <init>(...);
}

-keep class com.microsoft.appcenter.crashes.model.NativeException
-keepclassmembers class com.microsoft.appcenter.crashes.model.NativeException {
   <init>(...);
}

-keep class com.microsoft.appcenter.crashes.ingestion.models.AbstractErrorLog
-keepclassmembers class com.microsoft.appcenter.crashes.ingestion.models.AbstractErrorLog {
   <init>(...);
   *** getAppLaunchTimestamp(...);
   *** setAppLaunchTimestamp(...);
   *** getArchitecture(...);
   *** setArchitecture(...);
   *** getErrorThreadId(...);
   *** setErrorThreadId(...);
   *** getErrorThreadName(...);
   *** setErrorThreadName(...);
   *** getFatal(...);
   *** setFatal(...);
   *** getId(...);
   *** setId(...);
   *** getParentProcessId(...);
   *** setParentProcessId(...);
   *** getParentProcessName(...);
   *** setParentProcessName(...);
   *** getProcessId(...);
   *** setProcessId(...);
   *** getProcessName(...);
   *** setProcessName(...);
}

-keep class com.microsoft.appcenter.crashes.ingestion.models.AbstractErrorLog
-keepclassmembers class com.microsoft.appcenter.crashes.ingestion.models.AbstractErrorLog {
   *** getType(...);
}

-keep class com.microsoft.appcenter.crashes.ingestion.models.ErrorAttachmentLog
-keepclassmembers class com.microsoft.appcenter.crashes.ingestion.models.ErrorAttachmentLog {
   <init>(...);
   *** getContentType(...);
   *** setContentType(...);
   *** getErrorId(...);
   *** setErrorId(...);
   *** getFileName(...);
   *** setFileName(...);
   *** getId(...);
   *** setId(...);
   *** isValid(...);
   *** getType(...);
   *** attachmentWithBinary(...);
   *** attachmentWithText(...);
   *** getData(...);
   *** setData(...);
}

-keep class com.microsoft.appcenter.crashes.ingestion.models.Exception
-keepclassmembers class com.microsoft.appcenter.crashes.ingestion.models.Exception {
   <init>(...);
   *** getFrames(...);
   *** setFrames(...);
   *** getInnerExceptions(...);
   *** setInnerExceptions(...);
   *** getMessage(...);
   *** setMessage(...);
   *** getMinidumpFilePath(...);
   *** setMinidumpFilePath(...);
   *** getStackTrace(...);
   *** setStackTrace(...);
   *** getType(...);
   *** setType(...);
   *** getWrapperSdkName(...);
   *** setWrapperSdkName(...);
   *** read(...);
   *** write(...);
}

-keep class com.microsoft.appcenter.crashes.ingestion.models.HandledErrorLog
-keepclassmembers class com.microsoft.appcenter.crashes.ingestion.models.HandledErrorLog {
   <init>(...);
   *** getException(...);
   *** setException(...);
   *** getId(...);
   *** setId(...);
   *** getType(...);
}

-keep class com.microsoft.appcenter.crashes.ingestion.models.ManagedErrorLog
-keepclassmembers class com.microsoft.appcenter.crashes.ingestion.models.ManagedErrorLog {
   <init>(...);
   *** getException(...);
   *** setException(...);
   *** getThreads(...);
   *** setThreads(...);
   *** getType(...);
}

-keep class com.microsoft.appcenter.crashes.ingestion.models.StackFrame
-keepclassmembers class com.microsoft.appcenter.crashes.ingestion.models.StackFrame {
   <init>(...);
   *** getClassName(...);
   *** setClassName(...);
   *** getFileName(...);
   *** setFileName(...);
   *** getLineNumber(...);
   *** setLineNumber(...);
   *** getMethodName(...);
   *** setMethodName(...);
   *** read(...);
   *** write(...);
}

-keep class com.microsoft.appcenter.crashes.ingestion.models.Thread
-keepclassmembers class com.microsoft.appcenter.crashes.ingestion.models.Thread {
   <init>(...);
   *** getFrames(...);
   *** setFrames(...);
   *** getId(...);
   *** setId(...);
   *** getName(...);
   *** setName(...);
   *** read(...);
   *** write(...);
}

# ACW for Microsoft.AppCenter.Crashes
# ACW for Microsoft.AppCenter
# ACW for Plugin.Settings
# ACW for Xamarin.Android.Arch.Core.Common
# ACW for Xamarin.Android.Arch.Core.Runtime
# ACW for Xamarin.Android.Arch.Lifecycle.Common
-keep class android.arch.lifecycle.Lifecycle$State
-keepclassmembers class android.arch.lifecycle.Lifecycle$State {
   *** isAtLeast(...);
   *** valueOf(...);
   *** values(...);
}

-keep class android.arch.lifecycle.Lifecycle
-keepclassmembers class android.arch.lifecycle.Lifecycle {
   <init>(...);
   *** getCurrentState(...);
   *** addObserver(...);
   *** removeObserver(...);
}

-keep class android.arch.lifecycle.LifecycleObserver
-keepclassmembers class android.arch.lifecycle.LifecycleObserver {
}

-keep class android.arch.lifecycle.LifecycleOwner
-keepclassmembers class android.arch.lifecycle.LifecycleOwner {
}

-keep class android.arch.lifecycle.Lifecycle
-keepclassmembers class android.arch.lifecycle.Lifecycle {
   *** getCurrentState(...);
   *** addObserver(...);
   *** removeObserver(...);
}

# ACW for Xamarin.Android.Arch.Lifecycle.LiveData.Core
-keep class android.arch.lifecycle.Observer
-keepclassmembers class android.arch.lifecycle.Observer {
}

-keep class android.arch.lifecycle.LiveData
-keepclassmembers class android.arch.lifecycle.LiveData {
   <init>(...);
   *** hasActiveObservers(...);
   *** hasObservers(...);
   *** getValue(...);
   *** observe(...);
   *** observeForever(...);
   *** onActive(...);
   *** onInactive(...);
   *** postValue(...);
   *** removeObserver(...);
   *** removeObservers(...);
   *** setValue(...);
}

-keep class android.arch.lifecycle.LiveData
-keepclassmembers class android.arch.lifecycle.LiveData {
}

# ACW for Xamarin.Android.Arch.Lifecycle.LiveData
# ACW for Xamarin.Android.Arch.Lifecycle.Runtime
# ACW for Xamarin.Android.Arch.Lifecycle.ViewModel
-keep class android.arch.lifecycle.ViewModelStoreOwner
-keepclassmembers class android.arch.lifecycle.ViewModelStoreOwner {
}

-keep class android.arch.lifecycle.ViewModelStore
-keepclassmembers class android.arch.lifecycle.ViewModelStore {
   <init>(...);
   *** clear(...);
}

# ACW for Xamarin.Android.Support.Animated.Vector.Drawable
# ACW for Xamarin.Android.Support.Annotations
# ACW for Xamarin.Android.Support.AsyncLayoutInflater
# ACW for Xamarin.Android.Support.Collections
# ACW for Xamarin.Android.Support.Compat
-keep class android.support.v13.view.DragAndDropPermissionsCompat
-keepclassmembers class android.support.v13.view.DragAndDropPermissionsCompat {
   *** release(...);
   *** request(...);
}

-keep class android.support.v4.view.ActionProvider$SubUiVisibilityListener
-keepclassmembers class android.support.v4.view.ActionProvider$SubUiVisibilityListener {
}

-keep class mono.android.support.v4.view.ActionProvider_SubUiVisibilityListenerImplementor
-keepclassmembers class mono.android.support.v4.view.ActionProvider_SubUiVisibilityListenerImplementor {
}

-keep class android.support.v4.view.ActionProvider$VisibilityListener
-keepclassmembers class android.support.v4.view.ActionProvider$VisibilityListener {
}

-keep class mono.android.support.v4.view.ActionProvider_VisibilityListenerImplementor
-keepclassmembers class mono.android.support.v4.view.ActionProvider_VisibilityListenerImplementor {
}

-keep class android.support.v4.view.ActionProvider
-keepclassmembers class android.support.v4.view.ActionProvider {
   <init>(...);
   *** getContext(...);
   *** hasSubMenu(...);
   *** isVisible(...);
   *** onCreateActionView(...);
   *** onCreateActionView(...);
   *** onPerformDefaultAction(...);
   *** onPrepareSubMenu(...);
   *** overridesItemVisibility(...);
   *** refreshVisibility(...);
   *** reset(...);
   *** setSubUiVisibilityListener(...);
   *** setVisibilityListener(...);
   *** subUiVisibilityChanged(...);
}

-keep class android.support.v4.view.ActionProvider
-keepclassmembers class android.support.v4.view.ActionProvider {
   *** onCreateActionView(...);
}

-keep class android.support.v4.view.ViewPropertyAnimatorListener
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorListener {
}

-keep class android.support.v4.view.ViewPropertyAnimatorUpdateListener
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorUpdateListener {
}

-keep class android.support.v4.view.ViewPropertyAnimatorCompat
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat {
   *** getDuration(...);
   *** getInterpolator(...);
   *** getStartDelay(...);
   *** alpha(...);
   *** alphaBy(...);
   *** cancel(...);
   *** rotation(...);
   *** rotationBy(...);
   *** rotationX(...);
   *** rotationXBy(...);
   *** rotationY(...);
   *** rotationYBy(...);
   *** scaleX(...);
   *** scaleXBy(...);
   *** scaleY(...);
   *** scaleYBy(...);
   *** setDuration(...);
   *** setInterpolator(...);
   *** setListener(...);
   *** setStartDelay(...);
   *** setUpdateListener(...);
   *** start(...);
   *** translationX(...);
   *** translationXBy(...);
   *** translationY(...);
   *** translationYBy(...);
   *** translationZ(...);
   *** translationZBy(...);
   *** withEndAction(...);
   *** withLayer(...);
   *** withStartAction(...);
   *** x(...);
   *** xBy(...);
   *** y(...);
   *** yBy(...);
   *** z(...);
   *** zBy(...);
}

-keep class android.support.v4.internal.view.SupportMenu
-keepclassmembers class android.support.v4.internal.view.SupportMenu {
}

-keep class android.support.v4.internal.view.SupportMenuItem
-keepclassmembers class android.support.v4.internal.view.SupportMenuItem {
}

-keep class android.support.v4.content.ContextCompat
-keepclassmembers class android.support.v4.content.ContextCompat {
   <init>(...);
   *** checkSelfPermission(...);
   *** createDeviceProtectedStorageContext(...);
   *** getCodeCacheDir(...);
   *** getColor(...);
   *** getColorStateList(...);
   *** getDataDir(...);
   *** getDrawable(...);
   *** getExternalCacheDirs(...);
   *** getExternalFilesDirs(...);
   *** getNoBackupFilesDir(...);
   *** getObbDirs(...);
   *** getSystemService(...);
   *** getSystemServiceName(...);
   *** isDeviceProtectedStorage(...);
   *** startActivities(...);
   *** startActivities(...);
   *** startActivity(...);
   *** startForegroundService(...);
}

-keep class android.support.v4.content.pm.PackageInfoCompat
-keepclassmembers class android.support.v4.content.pm.PackageInfoCompat {
   *** getLongVersionCode(...);
}

-keep class android.support.v4.app.ActivityCompat$OnRequestPermissionsResultCallback
-keepclassmembers class android.support.v4.app.ActivityCompat$OnRequestPermissionsResultCallback {
}

-keep class android.support.v4.app.ActivityCompat$PermissionCompatDelegate
-keepclassmembers class android.support.v4.app.ActivityCompat$PermissionCompatDelegate {
}

-keep class android.support.v4.app.ActivityCompat$RequestPermissionsRequestCodeValidator
-keepclassmembers class android.support.v4.app.ActivityCompat$RequestPermissionsRequestCodeValidator {
}

-keep class android.support.v4.app.ActivityCompat
-keepclassmembers class android.support.v4.app.ActivityCompat {
   <init>(...);
   *** getPermissionCompatDelegate(...);
   *** setPermissionCompatDelegate(...);
   *** finishAffinity(...);
   *** finishAfterTransition(...);
   *** getReferrer(...);
   *** invalidateOptionsMenu(...);
   *** postponeEnterTransition(...);
   *** requestDragAndDropPermissions(...);
   *** requestPermissions(...);
   *** requireViewById(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivityForResult(...);
   *** startIntentSenderForResult(...);
   *** startPostponedEnterTransition(...);
}

-keep class android.support.v4.app.SharedElementCallback$OnSharedElementsReadyListener
-keepclassmembers class android.support.v4.app.SharedElementCallback$OnSharedElementsReadyListener {
}

-keep class android.support.v4.app.SharedElementCallback
-keepclassmembers class android.support.v4.app.SharedElementCallback {
   <init>(...);
   *** onCaptureSharedElementSnapshot(...);
   *** onCreateSnapshotView(...);
   *** onMapSharedElements(...);
   *** onRejectSharedElements(...);
   *** onSharedElementEnd(...);
   *** onSharedElementStart(...);
   *** onSharedElementsArrived(...);
}

-keep class android.support.v4.app.SharedElementCallback
-keepclassmembers class android.support.v4.app.SharedElementCallback {
}

-keep class android.support.v4.app.TaskStackBuilder$SupportParentable
-keepclassmembers class android.support.v4.app.TaskStackBuilder$SupportParentable {
}

-keep class android.support.v4.app.TaskStackBuilder
-keepclassmembers class android.support.v4.app.TaskStackBuilder {
   *** getIntentCount(...);
   *** addNextIntent(...);
   *** addNextIntentWithParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** create(...);
   *** editIntentAt(...);
   *** from(...);
   *** getIntent(...);
   *** getIntents(...);
   *** getPendingIntent(...);
   *** getPendingIntent(...);
   *** iterator(...);
   *** startActivities(...);
   *** startActivities(...);
}

# ACW for Xamarin.Android.Support.CoordinaterLayout
# ACW for Xamarin.Android.Support.Core.UI
# ACW for Xamarin.Android.Support.Core.Utils
# ACW for Xamarin.Android.Support.CursorAdapter
# ACW for Xamarin.Android.Support.CustomTabs
# ACW for Xamarin.Android.Support.CustomView
# ACW for Xamarin.Android.Support.Design
# ACW for Xamarin.Android.Support.DocumentFile
# ACW for Xamarin.Android.Support.DrawerLayout
-keep class android.support.v4.widget.DrawerLayout$DrawerListener
-keepclassmembers class android.support.v4.widget.DrawerLayout$DrawerListener {
}

-keep class mono.android.support.v4.widget.DrawerLayout_DrawerListenerImplementor
-keepclassmembers class mono.android.support.v4.widget.DrawerLayout_DrawerListenerImplementor {
}

-keep class android.support.v4.widget.DrawerLayout
-keepclassmembers class android.support.v4.widget.DrawerLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDrawerElevation(...);
   *** setDrawerElevation(...);
   *** getStatusBarBackgroundDrawable(...);
   *** addDrawerListener(...);
   *** addFocusables(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawers(...);
   *** getDrawerLockMode(...);
   *** getDrawerLockMode(...);
   *** getDrawerTitle(...);
   *** isDrawerOpen(...);
   *** isDrawerOpen(...);
   *** isDrawerVisible(...);
   *** isDrawerVisible(...);
   *** onDraw(...);
   *** onLayout(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** removeDrawerListener(...);
   *** setChildInsets(...);
   *** setDrawerListener(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerShadow(...);
   *** setDrawerShadow(...);
   *** setDrawerTitle(...);
   *** setScrimColor(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackgroundColor(...);
}

# ACW for Xamarin.Android.Support.Fragment
-keep class android.support.v4.app.FragmentActivity
-keepclassmembers class android.support.v4.app.FragmentActivity {
   <init>(...);
   *** getLastCustomNonConfigurationInstance(...);
   *** getLifecycle(...);
   *** getSupportFragmentManager(...);
   *** getSupportLoaderManager(...);
   *** getViewModelStore(...);
   *** onAttachFragment(...);
   *** onPrepareOptionsPanel(...);
   *** onResumeFragments(...);
   *** onRetainCustomNonConfigurationInstance(...);
   *** onRetainNonConfigurationInstance(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** startActivityFromFragment(...);
   *** startActivityFromFragment(...);
   *** startIntentSenderFromFragment(...);
   *** supportFinishAfterTransition(...);
   *** supportInvalidateOptionsMenu(...);
   *** supportPostponeEnterTransition(...);
   *** supportStartPostponedEnterTransition(...);
   *** validateRequestPermissionsRequestCode(...);
}

-keep class android.support.v4.app.Fragment$SavedState
-keepclassmembers class android.support.v4.app.Fragment$SavedState {
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class android.support.v4.app.Fragment
-keepclassmembers class android.support.v4.app.Fragment {
   <init>(...);
   *** getActivity(...);
   *** getAllowEnterTransitionOverlap(...);
   *** setAllowEnterTransitionOverlap(...);
   *** getAllowReturnTransitionOverlap(...);
   *** setAllowReturnTransitionOverlap(...);
   *** getArguments(...);
   *** setArguments(...);
   *** getChildFragmentManager(...);
   *** getContext(...);
   *** getEnterTransition(...);
   *** setEnterTransition(...);
   *** getExitTransition(...);
   *** setExitTransition(...);
   *** getFragmentManager(...);
   *** hasOptionsMenu(...);
   *** setHasOptionsMenu(...);
   *** getHost(...);
   *** getId(...);
   *** isAdded(...);
   *** isDetached(...);
   *** isHidden(...);
   *** isInLayout(...);
   *** isMenuVisible(...);
   *** isRemoving(...);
   *** isResumed(...);
   *** isStateSaved(...);
   *** isVisible(...);
   *** getLayoutInflater(...);
   *** getLifecycle(...);
   *** getLoaderManager(...);
   *** getParentFragment(...);
   *** getReenterTransition(...);
   *** setReenterTransition(...);
   *** getResources(...);
   *** getRetainInstance(...);
   *** setRetainInstance(...);
   *** getReturnTransition(...);
   *** setReturnTransition(...);
   *** getSharedElementEnterTransition(...);
   *** setSharedElementEnterTransition(...);
   *** getSharedElementReturnTransition(...);
   *** setSharedElementReturnTransition(...);
   *** getTag(...);
   *** getTargetFragment(...);
   *** getTargetRequestCode(...);
   *** getUserVisibleHint(...);
   *** setUserVisibleHint(...);
   *** getView(...);
   *** getViewLifecycleOwner(...);
   *** getViewLifecycleOwnerLiveData(...);
   *** getViewModelStore(...);
   *** dump(...);
   *** equals(...);
   *** getLayoutInflater(...);
   *** getString(...);
   *** getString(...);
   *** getText(...);
   *** hashCode(...);
   *** instantiate(...);
   *** instantiate(...);
   *** onActivityCreated(...);
   *** onActivityResult(...);
   *** onAttach(...);
   *** onAttach(...);
   *** onAttachFragment(...);
   *** onConfigurationChanged(...);
   *** onContextItemSelected(...);
   *** onCreate(...);
   *** onCreateAnimation(...);
   *** onCreateAnimator(...);
   *** onCreateContextMenu(...);
   *** onCreateOptionsMenu(...);
   *** onCreateView(...);
   *** onDestroy(...);
   *** onDestroyOptionsMenu(...);
   *** onDestroyView(...);
   *** onDetach(...);
   *** onGetLayoutInflater(...);
   *** onHiddenChanged(...);
   *** onInflate(...);
   *** onInflate(...);
   *** onLowMemory(...);
   *** onMultiWindowModeChanged(...);
   *** onOptionsItemSelected(...);
   *** onOptionsMenuClosed(...);
   *** onPause(...);
   *** onPictureInPictureModeChanged(...);
   *** onPrepareOptionsMenu(...);
   *** onRequestPermissionsResult(...);
   *** onResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** onViewCreated(...);
   *** onViewStateRestored(...);
   *** postponeEnterTransition(...);
   *** registerForContextMenu(...);
   *** requestPermissions(...);
   *** requireActivity(...);
   *** requireContext(...);
   *** requireFragmentManager(...);
   *** requireHost(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** setInitialSavedState(...);
   *** setMenuVisibility(...);
   *** setTargetFragment(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivity(...);
   *** startActivity(...);
   *** startActivityForResult(...);
   *** startActivityForResult(...);
   *** startIntentSenderForResult(...);
   *** startPostponedEnterTransition(...);
   *** unregisterForContextMenu(...);
}

-keep class android.support.v4.app.FragmentManager$BackStackEntry
-keepclassmembers class android.support.v4.app.FragmentManager$BackStackEntry {
}

-keep class android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks {
   <init>(...);
   *** onFragmentActivityCreated(...);
   *** onFragmentAttached(...);
   *** onFragmentCreated(...);
   *** onFragmentDestroyed(...);
   *** onFragmentDetached(...);
   *** onFragmentPaused(...);
   *** onFragmentPreAttached(...);
   *** onFragmentPreCreated(...);
   *** onFragmentResumed(...);
   *** onFragmentSaveInstanceState(...);
   *** onFragmentStarted(...);
   *** onFragmentStopped(...);
   *** onFragmentViewCreated(...);
   *** onFragmentViewDestroyed(...);
}

-keep class android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks {
}

-keep class android.support.v4.app.FragmentManager$OnBackStackChangedListener
-keepclassmembers class android.support.v4.app.FragmentManager$OnBackStackChangedListener {
}

-keep class mono.android.support.v4.app.FragmentManager_OnBackStackChangedListenerImplementor
-keepclassmembers class mono.android.support.v4.app.FragmentManager_OnBackStackChangedListenerImplementor {
}

-keep class android.support.v4.app.FragmentManager
-keepclassmembers class android.support.v4.app.FragmentManager {
   <init>(...);
   *** getBackStackEntryCount(...);
   *** getFragments(...);
   *** isDestroyed(...);
   *** isStateSaved(...);
   *** getPrimaryNavigationFragment(...);
   *** addOnBackStackChangedListener(...);
   *** beginTransaction(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** executePendingTransactions(...);
   *** findFragmentById(...);
   *** findFragmentByTag(...);
   *** getBackStackEntryAt(...);
   *** getFragment(...);
   *** openTransaction(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** putFragment(...);
   *** registerFragmentLifecycleCallbacks(...);
   *** removeOnBackStackChangedListener(...);
   *** saveFragmentInstanceState(...);
   *** unregisterFragmentLifecycleCallbacks(...);
}

-keep class android.support.v4.app.FragmentManager
-keepclassmembers class android.support.v4.app.FragmentManager {
   *** getBackStackEntryCount(...);
   *** getFragments(...);
   *** isDestroyed(...);
   *** isStateSaved(...);
   *** getPrimaryNavigationFragment(...);
   *** addOnBackStackChangedListener(...);
   *** beginTransaction(...);
   *** dump(...);
   *** executePendingTransactions(...);
   *** findFragmentById(...);
   *** findFragmentByTag(...);
   *** getBackStackEntryAt(...);
   *** getFragment(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** putFragment(...);
   *** registerFragmentLifecycleCallbacks(...);
   *** removeOnBackStackChangedListener(...);
   *** saveFragmentInstanceState(...);
   *** unregisterFragmentLifecycleCallbacks(...);
}

-keep class android.support.v4.app.FragmentTransaction
-keepclassmembers class android.support.v4.app.FragmentTransaction {
   <init>(...);
   *** isAddToBackStackAllowed(...);
   *** isEmpty(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addSharedElement(...);
   *** addToBackStack(...);
   *** attach(...);
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
   *** detach(...);
   *** disallowAddToBackStack(...);
   *** hide(...);
   *** remove(...);
   *** replace(...);
   *** replace(...);
   *** runOnCommit(...);
   *** setAllowOptimization(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbTitle(...);
   *** setBreadCrumbTitle(...);
   *** setCustomAnimations(...);
   *** setCustomAnimations(...);
   *** setPrimaryNavigationFragment(...);
   *** setReorderingAllowed(...);
   *** setTransition(...);
   *** setTransitionStyle(...);
   *** show(...);
}

-keep class android.support.v4.app.FragmentTransaction
-keepclassmembers class android.support.v4.app.FragmentTransaction {
   *** isAddToBackStackAllowed(...);
   *** isEmpty(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addSharedElement(...);
   *** addToBackStack(...);
   *** attach(...);
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
   *** detach(...);
   *** disallowAddToBackStack(...);
   *** hide(...);
   *** remove(...);
   *** replace(...);
   *** replace(...);
   *** runOnCommit(...);
   *** setAllowOptimization(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbTitle(...);
   *** setBreadCrumbTitle(...);
   *** setCustomAnimations(...);
   *** setCustomAnimations(...);
   *** setPrimaryNavigationFragment(...);
   *** setReorderingAllowed(...);
   *** setTransition(...);
   *** setTransitionStyle(...);
   *** show(...);
}

# ACW for Xamarin.Android.Support.Interpolator
# ACW for Xamarin.Android.Support.Loader
-keep class android.support.v4.content.Loader$OnLoadCanceledListener
-keepclassmembers class android.support.v4.content.Loader$OnLoadCanceledListener {
}

-keep class android.support.v4.content.Loader$OnLoadCompleteListener
-keepclassmembers class android.support.v4.content.Loader$OnLoadCompleteListener {
}

-keep class android.support.v4.content.Loader
-keepclassmembers class android.support.v4.content.Loader {
   <init>(...);
   *** getContext(...);
   *** getId(...);
   *** isAbandoned(...);
   *** isReset(...);
   *** isStarted(...);
   *** abandon(...);
   *** cancelLoad(...);
   *** commitContentChanged(...);
   *** dataToString(...);
   *** deliverCancellation(...);
   *** deliverResult(...);
   *** dump(...);
   *** forceLoad(...);
   *** onAbandon(...);
   *** onCancelLoad(...);
   *** onContentChanged(...);
   *** onForceLoad(...);
   *** onReset(...);
   *** onStartLoading(...);
   *** onStopLoading(...);
   *** registerListener(...);
   *** registerOnLoadCanceledListener(...);
   *** reset(...);
   *** rollbackContentChanged(...);
   *** startLoading(...);
   *** stopLoading(...);
   *** takeContentChanged(...);
   *** unregisterListener(...);
   *** unregisterOnLoadCanceledListener(...);
}

-keep class android.support.v4.app.LoaderManager$LoaderCallbacks
-keepclassmembers class android.support.v4.app.LoaderManager$LoaderCallbacks {
}

-keep class android.support.v4.app.LoaderManager
-keepclassmembers class android.support.v4.app.LoaderManager {
   <init>(...);
   *** hasRunningLoaders(...);
   *** destroyLoader(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** getInstance(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

-keep class android.support.v4.app.LoaderManager
-keepclassmembers class android.support.v4.app.LoaderManager {
   *** destroyLoader(...);
   *** dump(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

# ACW for Xamarin.Android.Support.LocalBroadcastManager
# ACW for Xamarin.Android.Support.Percent
# ACW for Xamarin.Android.Support.Print
# ACW for Xamarin.Android.Support.SlidingPaneLayout
# ACW for Xamarin.Android.Support.SwipeRefreshLayout
# ACW for Xamarin.Android.Support.Transition
# ACW for Xamarin.Android.Support.v7.AppCompat
-keep class android.support.v7.graphics.drawable.DrawerArrowDrawable
-keepclassmembers class android.support.v7.graphics.drawable.DrawerArrowDrawable {
   <init>(...);
   *** getArrowHeadLength(...);
   *** setArrowHeadLength(...);
   *** getArrowShaftLength(...);
   *** setArrowShaftLength(...);
   *** getBarLength(...);
   *** setBarLength(...);
   *** getBarThickness(...);
   *** setBarThickness(...);
   *** getColor(...);
   *** setColor(...);
   *** getDirection(...);
   *** setDirection(...);
   *** getGapSize(...);
   *** setGapSize(...);
   *** getOpacity(...);
   *** getPaint(...);
   *** getProgress(...);
   *** setProgress(...);
   *** isSpinEnabled(...);
   *** setSpinEnabled(...);
   *** draw(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setVerticalMirror(...);
}

-keep class android.support.v7.app.ActionBar$LayoutParams
-keepclassmembers class android.support.v7.app.ActionBar$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class android.support.v7.app.ActionBar$OnMenuVisibilityListener
-keepclassmembers class android.support.v7.app.ActionBar$OnMenuVisibilityListener {
}

-keep class mono.android.support.v7.app.ActionBar_OnMenuVisibilityListenerImplementor
-keepclassmembers class mono.android.support.v7.app.ActionBar_OnMenuVisibilityListenerImplementor {
}

-keep class android.support.v7.app.ActionBar$OnNavigationListener
-keepclassmembers class android.support.v7.app.ActionBar$OnNavigationListener {
}

-keep class android.support.v7.app.ActionBar$Tab
-keepclassmembers class android.support.v7.app.ActionBar$Tab {
   <init>(...);
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabListener(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class android.support.v7.app.ActionBar$Tab
-keepclassmembers class android.support.v7.app.ActionBar$Tab {
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabListener(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class android.support.v7.app.ActionBar$TabListener
-keepclassmembers class android.support.v7.app.ActionBar$TabListener {
}

-keep class android.support.v7.app.ActionBar
-keepclassmembers class android.support.v7.app.ActionBar {
   <init>(...);
   *** getCustomView(...);
   *** setCustomView(...);
   *** getDisplayOptions(...);
   *** setDisplayOptions(...);
   *** getElevation(...);
   *** setElevation(...);
   *** getHeight(...);
   *** getHideOffset(...);
   *** setHideOffset(...);
   *** isHideOnContentScrollEnabled(...);
   *** setHideOnContentScrollEnabled(...);
   *** isShowing(...);
   *** isTitleTruncated(...);
   *** getNavigationItemCount(...);
   *** getNavigationMode(...);
   *** setNavigationMode(...);
   *** getSelectedNavigationIndex(...);
   *** getSelectedTab(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTabCount(...);
   *** getThemedContext(...);
   *** getTitle(...);
   *** setTitle(...);
   *** addOnMenuVisibilityListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** closeOptionsMenu(...);
   *** collapseActionView(...);
   *** dispatchMenuVisibilityChanged(...);
   *** getTabAt(...);
   *** hide(...);
   *** invalidateOptionsMenu(...);
   *** newTab(...);
   *** onConfigurationChanged(...);
   *** onKeyShortcut(...);
   *** onMenuKeyEvent(...);
   *** openOptionsMenu(...);
   *** removeAllTabs(...);
   *** removeOnMenuVisibilityListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** setBackgroundDrawable(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setDefaultDisplayHomeAsUpEnabled(...);
   *** setDisplayHomeAsUpEnabled(...);
   *** setDisplayOptions(...);
   *** setDisplayShowCustomEnabled(...);
   *** setDisplayShowHomeEnabled(...);
   *** setDisplayShowTitleEnabled(...);
   *** setDisplayUseLogoEnabled(...);
   *** setHomeActionContentDescription(...);
   *** setHomeActionContentDescription(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeButtonEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setListNavigationCallbacks(...);
   *** setLogo(...);
   *** setLogo(...);
   *** setSelectedNavigationItem(...);
   *** setShowHideAnimationEnabled(...);
   *** setSplitBackgroundDrawable(...);
   *** setStackedBackgroundDrawable(...);
   *** setSubtitle(...);
   *** setTitle(...);
   *** setWindowTitle(...);
   *** show(...);
   *** startActionMode(...);
}

-keep class android.support.v7.app.ActionBar
-keepclassmembers class android.support.v7.app.ActionBar {
   *** getCustomView(...);
   *** setCustomView(...);
   *** getDisplayOptions(...);
   *** setDisplayOptions(...);
   *** getHeight(...);
   *** isShowing(...);
   *** getNavigationItemCount(...);
   *** getNavigationMode(...);
   *** setNavigationMode(...);
   *** getSelectedNavigationIndex(...);
   *** getSelectedTab(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTabCount(...);
   *** getTitle(...);
   *** setTitle(...);
   *** addOnMenuVisibilityListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** getTabAt(...);
   *** hide(...);
   *** newTab(...);
   *** removeAllTabs(...);
   *** removeOnMenuVisibilityListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** setBackgroundDrawable(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setDisplayHomeAsUpEnabled(...);
   *** setDisplayOptions(...);
   *** setDisplayShowCustomEnabled(...);
   *** setDisplayShowHomeEnabled(...);
   *** setDisplayShowTitleEnabled(...);
   *** setDisplayUseLogoEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setListNavigationCallbacks(...);
   *** setLogo(...);
   *** setLogo(...);
   *** setSelectedNavigationItem(...);
   *** setSubtitle(...);
   *** setTitle(...);
   *** show(...);
}

-keep class android.support.v7.app.ActionBarDrawerToggle$Delegate
-keepclassmembers class android.support.v7.app.ActionBarDrawerToggle$Delegate {
}

-keep class android.support.v7.app.ActionBarDrawerToggle$DelegateProvider
-keepclassmembers class android.support.v7.app.ActionBarDrawerToggle$DelegateProvider {
}

-keep class android.support.v7.app.ActionBarDrawerToggle
-keepclassmembers class android.support.v7.app.ActionBarDrawerToggle {
   <init>(...);
   <init>(...);
   *** getDrawerArrowDrawable(...);
   *** setDrawerArrowDrawable(...);
   *** isDrawerIndicatorEnabled(...);
   *** setDrawerIndicatorEnabled(...);
   *** isDrawerSlideAnimationEnabled(...);
   *** setDrawerSlideAnimationEnabled(...);
   *** getToolbarNavigationClickListener(...);
   *** setToolbarNavigationClickListener(...);
   *** onConfigurationChanged(...);
   *** onDrawerClosed(...);
   *** onDrawerOpened(...);
   *** onDrawerSlide(...);
   *** onDrawerStateChanged(...);
   *** onOptionsItemSelected(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** syncState(...);
}

-keep class android.support.v7.app.AppCompatActivity
-keepclassmembers class android.support.v7.app.AppCompatActivity {
   <init>(...);
   *** getDelegate(...);
   *** getDrawerToggleDelegate(...);
   *** getSupportActionBar(...);
   *** getSupportParentActivityIntent(...);
   *** onCreateSupportNavigateUpTaskStack(...);
   *** onMenuItemSelected(...);
   *** onPrepareSupportNavigateUpTaskStack(...);
   *** onSupportActionModeFinished(...);
   *** onSupportActionModeStarted(...);
   *** onSupportContentChanged(...);
   *** onSupportNavigateUp(...);
   *** onWindowStartingSupportActionMode(...);
   *** setSupportActionBar(...);
   *** setSupportProgress(...);
   *** setSupportProgressBarIndeterminate(...);
   *** setSupportProgressBarIndeterminateVisibility(...);
   *** setSupportProgressBarVisibility(...);
   *** startSupportActionMode(...);
   *** supportNavigateUpTo(...);
   *** supportRequestWindowFeature(...);
   *** supportShouldUpRecreateTask(...);
}

-keep class android.support.v7.app.AppCompatDelegate
-keepclassmembers class android.support.v7.app.AppCompatDelegate {
   *** isCompatVectorFromResourcesEnabled(...);
   *** setCompatVectorFromResourcesEnabled(...);
   *** getDefaultNightMode(...);
   *** setDefaultNightMode(...);
   *** getDrawerToggleDelegate(...);
   *** isHandleNativeActionModesEnabled(...);
   *** setHandleNativeActionModesEnabled(...);
   *** getMenuInflater(...);
   *** getSupportActionBar(...);
   *** addContentView(...);
   *** applyDayNight(...);
   *** create(...);
   *** create(...);
   *** create(...);
   *** createView(...);
   *** findViewById(...);
   *** hasWindowFeature(...);
   *** installViewFactory(...);
   *** invalidateOptionsMenu(...);
   *** onConfigurationChanged(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onPostCreate(...);
   *** onPostResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** requestWindowFeature(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setLocalNightMode(...);
   *** setSupportActionBar(...);
   *** setTitle(...);
   *** startSupportActionMode(...);
}

-keep class android.support.v7.app.AppCompatDelegate
-keepclassmembers class android.support.v7.app.AppCompatDelegate {
   *** getDrawerToggleDelegate(...);
   *** isHandleNativeActionModesEnabled(...);
   *** setHandleNativeActionModesEnabled(...);
   *** getMenuInflater(...);
   *** getSupportActionBar(...);
   *** addContentView(...);
   *** applyDayNight(...);
   *** createView(...);
   *** findViewById(...);
   *** hasWindowFeature(...);
   *** installViewFactory(...);
   *** invalidateOptionsMenu(...);
   *** onConfigurationChanged(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onPostCreate(...);
   *** onPostResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** requestWindowFeature(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setLocalNightMode(...);
   *** setSupportActionBar(...);
   *** setTitle(...);
   *** startSupportActionMode(...);
}

-keep class android.support.v7.app.AppCompatCallback
-keepclassmembers class android.support.v7.app.AppCompatCallback {
}

-keep class android.support.v7.widget.Toolbar$OnMenuItemClickListener
-keepclassmembers class android.support.v7.widget.Toolbar$OnMenuItemClickListener {
}

-keep class mono.android.support.v7.widget.Toolbar_OnMenuItemClickListenerImplementor
-keepclassmembers class mono.android.support.v7.widget.Toolbar_OnMenuItemClickListenerImplementor {
}

-keep class android.support.v7.widget.Toolbar
-keepclassmembers class android.support.v7.widget.Toolbar {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getContentInsetEnd(...);
   *** getContentInsetEndWithActions(...);
   *** setContentInsetEndWithActions(...);
   *** getContentInsetLeft(...);
   *** getContentInsetRight(...);
   *** getContentInsetStart(...);
   *** getContentInsetStartWithNavigation(...);
   *** setContentInsetStartWithNavigation(...);
   *** getCurrentContentInsetEnd(...);
   *** getCurrentContentInsetLeft(...);
   *** getCurrentContentInsetRight(...);
   *** getCurrentContentInsetStart(...);
   *** hasExpandedActionView(...);
   *** isOverflowMenuShowPending(...);
   *** isOverflowMenuShowing(...);
   *** isTitleTruncated(...);
   *** getLogo(...);
   *** setLogo(...);
   *** getLogoDescription(...);
   *** setLogoDescription(...);
   *** getMenu(...);
   *** getNavigationContentDescription(...);
   *** setNavigationContentDescription(...);
   *** getNavigationIcon(...);
   *** setNavigationIcon(...);
   *** getOverflowIcon(...);
   *** setOverflowIcon(...);
   *** getPopupTheme(...);
   *** setPopupTheme(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleMarginBottom(...);
   *** setTitleMarginBottom(...);
   *** getTitleMarginEnd(...);
   *** setTitleMarginEnd(...);
   *** getTitleMarginStart(...);
   *** setTitleMarginStart(...);
   *** getTitleMarginTop(...);
   *** setTitleMarginTop(...);
   *** getWrapper(...);
   *** canShowOverflowMenu(...);
   *** collapseActionView(...);
   *** dismissPopupMenus(...);
   *** hideOverflowMenu(...);
   *** inflateMenu(...);
   *** onLayout(...);
   *** setCollapsible(...);
   *** setContentInsetsAbsolute(...);
   *** setContentInsetsRelative(...);
   *** setLogo(...);
   *** setLogoDescription(...);
   *** setMenuCallbacks(...);
   *** setNavigationContentDescription(...);
   *** setNavigationIcon(...);
   *** setNavigationOnClickListener(...);
   *** setOnMenuItemClickListener(...);
   *** setSubtitle(...);
   *** setSubtitleTextAppearance(...);
   *** setSubtitleTextColor(...);
   *** setTitle(...);
   *** setTitleMargin(...);
   *** setTitleTextAppearance(...);
   *** setTitleTextColor(...);
   *** showOverflowMenu(...);
}

-keep class android.support.v7.widget.DecorToolbar
-keepclassmembers class android.support.v7.widget.DecorToolbar {
}

-keep class android.support.v7.widget.ScrollingTabContainerView$VisibilityAnimListener
-keepclassmembers class android.support.v7.widget.ScrollingTabContainerView$VisibilityAnimListener {
   <init>(...);
   *** withFinalVisibility(...);
}

-keep class android.support.v7.widget.ScrollingTabContainerView
-keepclassmembers class android.support.v7.widget.ScrollingTabContainerView {
   <init>(...);
   *** addTab(...);
   *** addTab(...);
   *** animateToTab(...);
   *** animateToVisibility(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onItemSelected(...);
   *** onMeasure(...);
   *** onNothingSelected(...);
   *** removeAllTabs(...);
   *** removeTabAt(...);
   *** setAllowCollapse(...);
   *** setContentHeight(...);
   *** setTabSelected(...);
   *** updateTab(...);
}

-keep class android.support.v7.view.ActionMode$Callback
-keepclassmembers class android.support.v7.view.ActionMode$Callback {
}

-keep class android.support.v7.view.ActionMode
-keepclassmembers class android.support.v7.view.ActionMode {
   <init>(...);
   *** getCustomView(...);
   *** setCustomView(...);
   *** isTitleOptional(...);
   *** isUiFocusable(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTag(...);
   *** setTag(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleOptionalHint(...);
   *** setTitleOptionalHint(...);
   *** finish(...);
   *** invalidate(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class android.support.v7.view.ActionMode
-keepclassmembers class android.support.v7.view.ActionMode {
   *** getCustomView(...);
   *** setCustomView(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTitle(...);
   *** setTitle(...);
   *** finish(...);
   *** invalidate(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class android.support.v7.view.menu.MenuBuilder$Callback
-keepclassmembers class android.support.v7.view.menu.MenuBuilder$Callback {
}

-keep class android.support.v7.view.menu.MenuBuilder
-keepclassmembers class android.support.v7.view.menu.MenuBuilder {
   <init>(...);
   *** getActionItems(...);
   *** getActionViewStatesKey(...);
   *** getContext(...);
   *** getExpandedItem(...);
   *** isGroupDividerEnabled(...);
   *** setGroupDividerEnabled(...);
   *** hasVisibleItems(...);
   *** getHeaderIcon(...);
   *** getHeaderTitle(...);
   *** getHeaderView(...);
   *** getNonActionItems(...);
   *** getRootMenu(...);
   *** isShortcutsVisible(...);
   *** setShortcutsVisible(...);
   *** getVisibleItems(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addIntentOptions(...);
   *** addInternal(...);
   *** addMenuPresenter(...);
   *** addMenuPresenter(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** changeMenuMode(...);
   *** clear(...);
   *** clearAll(...);
   *** clearHeader(...);
   *** close(...);
   *** close(...);
   *** collapseItemActionView(...);
   *** expandItemActionView(...);
   *** findGroupIndex(...);
   *** findGroupIndex(...);
   *** findItem(...);
   *** findItemIndex(...);
   *** flagActionItems(...);
   *** getItem(...);
   *** isShortcutKey(...);
   *** onItemsChanged(...);
   *** performIdentifierAction(...);
   *** performItemAction(...);
   *** performItemAction(...);
   *** performShortcut(...);
   *** removeGroup(...);
   *** removeItem(...);
   *** removeItemAt(...);
   *** removeMenuPresenter(...);
   *** restoreActionViewStates(...);
   *** restorePresenterStates(...);
   *** saveActionViewStates(...);
   *** savePresenterStates(...);
   *** setCallback(...);
   *** setCurrentMenuInfo(...);
   *** setDefaultShowAsAction(...);
   *** setGroupCheckable(...);
   *** setGroupEnabled(...);
   *** setGroupVisible(...);
   *** setHeaderIconInt(...);
   *** setHeaderIconInt(...);
   *** setHeaderTitleInt(...);
   *** setHeaderTitleInt(...);
   *** setHeaderViewInt(...);
   *** setOptionalIconsVisible(...);
   *** setOverrideVisibleItems(...);
   *** setQwertyMode(...);
   *** size(...);
   *** startDispatchingItemsChanged(...);
   *** stopDispatchingItemsChanged(...);
}

-keep class android.support.v7.view.menu.MenuPresenter$Callback
-keepclassmembers class android.support.v7.view.menu.MenuPresenter$Callback {
}

-keep class android.support.v7.view.menu.MenuPresenter
-keepclassmembers class android.support.v7.view.menu.MenuPresenter {
}

-keep class android.support.v7.view.menu.MenuView
-keepclassmembers class android.support.v7.view.menu.MenuView {
}

-keep class android.support.v7.view.menu.MenuItemImpl
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl {
   *** getActionProvider(...);
   *** getActionView(...);
   *** getAlphabeticModifiers(...);
   *** getAlphabeticShortcut(...);
   *** getContentDescription(...);
   *** isExclusiveCheckable(...);
   *** setExclusiveCheckable(...);
   *** getGroupId(...);
   *** hasCollapsibleActionView(...);
   *** hasSubMenu(...);
   *** getIcon(...);
   *** getIconTintList(...);
   *** getIconTintMode(...);
   *** getIntent(...);
   *** isActionButton(...);
   *** setIsActionButton(...);
   *** isActionViewExpanded(...);
   *** isCheckable(...);
   *** isChecked(...);
   *** isEnabled(...);
   *** isVisible(...);
   *** getItemId(...);
   *** getMenuInfo(...);
   *** getNumericModifiers(...);
   *** getNumericShortcut(...);
   *** getOrder(...);
   *** getOrdering(...);
   *** getSubMenu(...);
   *** getSupportActionProvider(...);
   *** getTitle(...);
   *** getTitleCondensed(...);
   *** getTooltipText(...);
   *** actionFormatChanged(...);
   *** collapseActionView(...);
   *** expandActionView(...);
   *** invoke(...);
   *** requestsActionButton(...);
   *** requiresActionButton(...);
   *** setActionProvider(...);
   *** setActionView(...);
   *** setActionView(...);
   *** setActionViewExpanded(...);
   *** setAlphabeticShortcut(...);
   *** setAlphabeticShortcut(...);
   *** setCallback(...);
   *** setCheckable(...);
   *** setChecked(...);
   *** setContentDescription(...);
   *** setEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconTintList(...);
   *** setIconTintMode(...);
   *** setIntent(...);
   *** setNumericShortcut(...);
   *** setNumericShortcut(...);
   *** setOnActionExpandListener(...);
   *** setOnMenuItemClickListener(...);
   *** setShortcut(...);
   *** setShortcut(...);
   *** setShowAsAction(...);
   *** setShowAsActionFlags(...);
   *** setSubMenu(...);
   *** setSupportActionProvider(...);
   *** setTitle(...);
   *** setTitle(...);
   *** setTitleCondensed(...);
   *** setTooltipText(...);
   *** setVisible(...);
   *** shouldShowIcon(...);
   *** showsTextAsAction(...);
}

-keep class android.support.v7.view.menu.SubMenuBuilder
-keepclassmembers class android.support.v7.view.menu.SubMenuBuilder {
   <init>(...);
   *** getActionViewStatesKey(...);
   *** isQwertyMode(...);
   *** getItem(...);
   *** getParentMenu(...);
   *** setHeaderIcon(...);
   *** setHeaderIcon(...);
   *** setHeaderTitle(...);
   *** setHeaderTitle(...);
   *** setHeaderView(...);
   *** setIcon(...);
   *** setIcon(...);
}

# ACW for Xamarin.Android.Support.v7.CardView
# ACW for Xamarin.Android.Support.v7.RecyclerView
# ACW for Xamarin.Android.Support.Vector.Drawable
# ACW for Xamarin.Android.Support.VersionedParcelable
# ACW for Xamarin.Android.Support.ViewPager
# ACW for Xamarin.Essentials
